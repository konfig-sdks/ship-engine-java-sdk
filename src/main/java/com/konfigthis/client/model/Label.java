/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AlternativeIdentifier;
import com.konfigthis.client.model.DisplayScheme;
import com.konfigthis.client.model.LabelChargeEvent;
import com.konfigthis.client.model.LabelDownload;
import com.konfigthis.client.model.LabelDownloadType;
import com.konfigthis.client.model.LabelFormat;
import com.konfigthis.client.model.LabelInsuranceClaim;
import com.konfigthis.client.model.LabelLayout;
import com.konfigthis.client.model.LabelPackagesInner;
import com.konfigthis.client.model.LabelStatus;
import com.konfigthis.client.model.MonetaryValue;
import com.konfigthis.client.model.OptionalLinkNullable;
import com.konfigthis.client.model.PartialShipment;
import com.konfigthis.client.model.TrackingStatus;
import com.konfigthis.client.model.ValidateAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them. 
 */
@ApiModel(description = "A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them. ")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Label {
  public static final String SERIALIZED_NAME_LABEL_ID = "label_id";
  @SerializedName(SERIALIZED_NAME_LABEL_ID)
  private String labelId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private LabelStatus status;

  public static final String SERIALIZED_NAME_SHIPMENT_ID = "shipment_id";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ID)
  private String shipmentId;

  public static final String SERIALIZED_NAME_SHIPMENT = "shipment";
  @SerializedName(SERIALIZED_NAME_SHIPMENT)
  private PartialShipment shipment;

  public static final String SERIALIZED_NAME_SHIP_DATE = "ship_date";
  @SerializedName(SERIALIZED_NAME_SHIP_DATE)
  private OffsetDateTime shipDate;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_SHIPMENT_COST = "shipment_cost";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_COST)
  private MonetaryValue shipmentCost;

  public static final String SERIALIZED_NAME_INSURANCE_COST = "insurance_cost";
  @SerializedName(SERIALIZED_NAME_INSURANCE_COST)
  private MonetaryValue insuranceCost;

  public static final String SERIALIZED_NAME_REQUESTED_COMPARISON_AMOUNT = "requested_comparison_amount";
  @SerializedName(SERIALIZED_NAME_REQUESTED_COMPARISON_AMOUNT)
  private MonetaryValue requestedComparisonAmount;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_IS_RETURN_LABEL = "is_return_label";
  @SerializedName(SERIALIZED_NAME_IS_RETURN_LABEL)
  private Boolean isReturnLabel;

  public static final String SERIALIZED_NAME_RMA_NUMBER = "rma_number";
  @SerializedName(SERIALIZED_NAME_RMA_NUMBER)
  private String rmaNumber;

  public static final String SERIALIZED_NAME_IS_INTERNATIONAL = "is_international";
  @SerializedName(SERIALIZED_NAME_IS_INTERNATIONAL)
  private Boolean isInternational;

  public static final String SERIALIZED_NAME_BATCH_ID = "batch_id";
  @SerializedName(SERIALIZED_NAME_BATCH_ID)
  private String batchId;

  public static final String SERIALIZED_NAME_CARRIER_ID = "carrier_id";
  @SerializedName(SERIALIZED_NAME_CARRIER_ID)
  private String carrierId;

  public static final String SERIALIZED_NAME_CHARGE_EVENT = "charge_event";
  @SerializedName(SERIALIZED_NAME_CHARGE_EVENT)
  private LabelChargeEvent chargeEvent;

  public static final String SERIALIZED_NAME_OUTBOUND_LABEL_ID = "outbound_label_id";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_LABEL_ID)
  private String outboundLabelId;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "service_code";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_TEST_LABEL = "test_label";
  @SerializedName(SERIALIZED_NAME_TEST_LABEL)
  private Boolean testLabel = false;

  public static final String SERIALIZED_NAME_PACKAGE_CODE = "package_code";
  @SerializedName(SERIALIZED_NAME_PACKAGE_CODE)
  private String packageCode;

  public static final String SERIALIZED_NAME_VALIDATE_ADDRESS = "validate_address";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ADDRESS)
  private ValidateAddress validateAddress;

  public static final String SERIALIZED_NAME_VOIDED = "voided";
  @SerializedName(SERIALIZED_NAME_VOIDED)
  private Boolean voided;

  public static final String SERIALIZED_NAME_VOIDED_AT = "voided_at";
  @SerializedName(SERIALIZED_NAME_VOIDED_AT)
  private OffsetDateTime voidedAt;

  public static final String SERIALIZED_NAME_LABEL_DOWNLOAD_TYPE = "label_download_type";
  @SerializedName(SERIALIZED_NAME_LABEL_DOWNLOAD_TYPE)
  private LabelDownloadType labelDownloadType;

  public static final String SERIALIZED_NAME_LABEL_FORMAT = "label_format";
  @SerializedName(SERIALIZED_NAME_LABEL_FORMAT)
  private LabelFormat labelFormat;

  public static final String SERIALIZED_NAME_DISPLAY_SCHEME = "display_scheme";
  @SerializedName(SERIALIZED_NAME_DISPLAY_SCHEME)
  private DisplayScheme displayScheme;

  public static final String SERIALIZED_NAME_LABEL_LAYOUT = "label_layout";
  @SerializedName(SERIALIZED_NAME_LABEL_LAYOUT)
  private LabelLayout labelLayout;

  public static final String SERIALIZED_NAME_TRACKABLE = "trackable";
  @SerializedName(SERIALIZED_NAME_TRACKABLE)
  private Boolean trackable;

  public static final String SERIALIZED_NAME_LABEL_IMAGE_ID = "label_image_id";
  @SerializedName(SERIALIZED_NAME_LABEL_IMAGE_ID)
  private String labelImageId;

  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_TRACKING_STATUS = "tracking_status";
  @SerializedName(SERIALIZED_NAME_TRACKING_STATUS)
  private TrackingStatus trackingStatus;

  public static final String SERIALIZED_NAME_LABEL_DOWNLOAD = "label_download";
  @SerializedName(SERIALIZED_NAME_LABEL_DOWNLOAD)
  private LabelDownload labelDownload;

  public static final String SERIALIZED_NAME_FORM_DOWNLOAD = "form_download";
  @SerializedName(SERIALIZED_NAME_FORM_DOWNLOAD)
  private OptionalLinkNullable formDownload;

  public static final String SERIALIZED_NAME_INSURANCE_CLAIM = "insurance_claim";
  @SerializedName(SERIALIZED_NAME_INSURANCE_CLAIM)
  private LabelInsuranceClaim insuranceClaim;

  public static final String SERIALIZED_NAME_PACKAGES = "packages";
  @SerializedName(SERIALIZED_NAME_PACKAGES)
  private List<LabelPackagesInner> packages = null;

  public static final String SERIALIZED_NAME_ALTERNATIVE_IDENTIFIERS = "alternative_identifiers";
  @SerializedName(SERIALIZED_NAME_ALTERNATIVE_IDENTIFIERS)
  private List<AlternativeIdentifier> alternativeIdentifiers = null;

  public Label() {
  }

  
  public Label(
     String trackingNumber, 
     Boolean isInternational, 
     Boolean voided, 
     OffsetDateTime voidedAt, 
     Boolean trackable, 
     List<LabelPackagesInner> packages, 
     List<AlternativeIdentifier> alternativeIdentifiers
  ) {
    this();
    this.trackingNumber = trackingNumber;
    this.isInternational = isInternational;
    this.voided = voided;
    this.voidedAt = voidedAt;
    this.trackable = trackable;
    this.packages = packages;
    this.alternativeIdentifiers = alternativeIdentifiers;
  }

  public Label labelId(String labelId) {
    
    
    if (labelId != null && labelId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for labelId. Length must be greater than or equal to 1.");
    }
    
    this.labelId = labelId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return labelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getLabelId() {
    return labelId;
  }


  public void setLabelId(String labelId) {
    
    
    if (labelId != null && labelId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for labelId. Length must be greater than or equal to 1.");
    }
    this.labelId = labelId;
  }


  public Label status(LabelStatus status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LabelStatus getStatus() {
    return status;
  }


  public void setStatus(LabelStatus status) {
    
    
    
    this.status = status;
  }


  public Label shipmentId(String shipmentId) {
    
    
    if (shipmentId != null && shipmentId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for shipmentId. Length must be greater than or equal to 1.");
    }
    
    this.shipmentId = shipmentId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return shipmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getShipmentId() {
    return shipmentId;
  }


  public void setShipmentId(String shipmentId) {
    
    
    if (shipmentId != null && shipmentId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for shipmentId. Length must be greater than or equal to 1.");
    }
    this.shipmentId = shipmentId;
  }


  public Label shipment(PartialShipment shipment) {
    
    
    
    
    this.shipment = shipment;
    return this;
  }

   /**
   * The shipment information used to generate the label
   * @return shipment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The shipment information used to generate the label")

  public PartialShipment getShipment() {
    return shipment;
  }


  public void setShipment(PartialShipment shipment) {
    
    
    
    this.shipment = shipment;
  }


  public Label shipDate(OffsetDateTime shipDate) {
    
    
    
    
    this.shipDate = shipDate;
    return this;
  }

   /**
   * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to &#x60;00:00:00&#x60; UTC by ShipEngine. 
   * @return shipDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-09-23T00:00Z", value = "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine. ")

  public OffsetDateTime getShipDate() {
    return shipDate;
  }


  public void setShipDate(OffsetDateTime shipDate) {
    
    
    
    this.shipDate = shipDate;
  }


  public Label createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. 
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-09-23T15:00Z", value = "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. ")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public Label shipmentCost(MonetaryValue shipmentCost) {
    
    
    
    
    this.shipmentCost = shipmentCost;
    return this;
  }

   /**
   * The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs. 
   * @return shipmentCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs. ")

  public MonetaryValue getShipmentCost() {
    return shipmentCost;
  }


  public void setShipmentCost(MonetaryValue shipmentCost) {
    
    
    
    this.shipmentCost = shipmentCost;
  }


  public Label insuranceCost(MonetaryValue insuranceCost) {
    
    
    
    
    this.insuranceCost = insuranceCost;
    return this;
  }

   /**
   * The insurance cost for this package.  Add this to the &#x60;shipment_cost&#x60; field to get the total cost. 
   * @return insuranceCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost. ")

  public MonetaryValue getInsuranceCost() {
    return insuranceCost;
  }


  public void setInsuranceCost(MonetaryValue insuranceCost) {
    
    
    
    this.insuranceCost = insuranceCost;
  }


  public Label requestedComparisonAmount(MonetaryValue requestedComparisonAmount) {
    
    
    
    
    this.requestedComparisonAmount = requestedComparisonAmount;
    return this;
  }

   /**
   * The total shipping cost for the specified comparison_rate_type. 
   * @return requestedComparisonAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total shipping cost for the specified comparison_rate_type. ")

  public MonetaryValue getRequestedComparisonAmount() {
    return requestedComparisonAmount;
  }


  public void setRequestedComparisonAmount(MonetaryValue requestedComparisonAmount) {
    
    
    
    this.requestedComparisonAmount = requestedComparisonAmount;
  }


   /**
   * The tracking number for the package. Tracking number formats vary across carriers.
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "782758401696", value = "The tracking number for the package. Tracking number formats vary across carriers.")

  public String getTrackingNumber() {
    return trackingNumber;
  }




  public Label isReturnLabel(Boolean isReturnLabel) {
    
    
    
    
    this.isReturnLabel = isReturnLabel;
    return this;
  }

   /**
   * Indicates whether this is a return label.  You may also want to set the &#x60;rma_number&#x60; so you know what is being returned. 
   * @return isReturnLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned. ")

  public Boolean getIsReturnLabel() {
    return isReturnLabel;
  }


  public void setIsReturnLabel(Boolean isReturnLabel) {
    
    
    
    this.isReturnLabel = isReturnLabel;
  }


  public Label rmaNumber(String rmaNumber) {
    
    
    
    
    this.rmaNumber = rmaNumber;
    return this;
  }

   /**
   * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. 
   * @return rmaNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value. ")

  public String getRmaNumber() {
    return rmaNumber;
  }


  public void setRmaNumber(String rmaNumber) {
    
    
    
    this.rmaNumber = rmaNumber;
  }


   /**
   * Indicates whether this is an international shipment.  That is, the originating country and destination country are different. 
   * @return isInternational
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether this is an international shipment.  That is, the originating country and destination country are different. ")

  public Boolean getIsInternational() {
    return isInternational;
  }




  public Label batchId(String batchId) {
    
    
    if (batchId != null && batchId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for batchId. Length must be greater than or equal to 1.");
    }
    
    this.batchId = batchId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return batchId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getBatchId() {
    return batchId;
  }


  public void setBatchId(String batchId) {
    
    
    if (batchId != null && batchId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for batchId. Length must be greater than or equal to 1.");
    }
    this.batchId = batchId;
  }


  public Label carrierId(String carrierId) {
    
    
    if (carrierId != null && carrierId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for carrierId. Length must be greater than or equal to 1.");
    }
    
    this.carrierId = carrierId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return carrierId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getCarrierId() {
    return carrierId;
  }


  public void setCarrierId(String carrierId) {
    
    
    if (carrierId != null && carrierId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for carrierId. Length must be greater than or equal to 1.");
    }
    this.carrierId = carrierId;
  }


  public Label chargeEvent(LabelChargeEvent chargeEvent) {
    
    
    
    
    this.chargeEvent = chargeEvent;
    return this;
  }

   /**
   * The label charge event. 
   * @return chargeEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label charge event. ")

  public LabelChargeEvent getChargeEvent() {
    return chargeEvent;
  }


  public void setChargeEvent(LabelChargeEvent chargeEvent) {
    
    
    
    this.chargeEvent = chargeEvent;
  }


  public Label outboundLabelId(String outboundLabelId) {
    
    
    if (outboundLabelId != null && outboundLabelId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for outboundLabelId. Length must be greater than or equal to 1.");
    }
    
    this.outboundLabelId = outboundLabelId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return outboundLabelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getOutboundLabelId() {
    return outboundLabelId;
  }


  public void setOutboundLabelId(String outboundLabelId) {
    
    
    if (outboundLabelId != null && outboundLabelId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for outboundLabelId. Length must be greater than or equal to 1.");
    }
    this.outboundLabelId = outboundLabelId;
  }


  public Label serviceCode(String serviceCode) {
    
    
    
    
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as &#x60;fedex_ground&#x60;, &#x60;usps_first_class_mail&#x60;, &#x60;flat_rate_envelope&#x60;, etc. 
   * @return serviceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "usps_first_class_mail", value = "A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc. ")

  public String getServiceCode() {
    return serviceCode;
  }


  public void setServiceCode(String serviceCode) {
    
    
    
    this.serviceCode = serviceCode;
  }


  public Label testLabel(Boolean testLabel) {
    
    
    
    
    this.testLabel = testLabel;
    return this;
  }

   /**
   * Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.
   * @return testLabel
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indicate if this label is being used only for testing purposes. If true, then no charge will be added to your account.")

  public Boolean getTestLabel() {
    return testLabel;
  }


  public void setTestLabel(Boolean testLabel) {
    
    
    
    this.testLabel = testLabel;
  }


  public Label packageCode(String packageCode) {
    
    
    if (packageCode != null && packageCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageCode. Length must be greater than or equal to 1.");
    }
    
    this.packageCode = packageCode;
    return this;
  }

   /**
   * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as &#x60;thick_envelope&#x60;, &#x60;small_flat_rate_box&#x60;, &#x60;large_package&#x60;, etc.  Use the code &#x60;package&#x60; for custom or unknown package types. 
   * @return packageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "small_flat_rate_box", value = "A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types. ")

  public String getPackageCode() {
    return packageCode;
  }


  public void setPackageCode(String packageCode) {
    
    
    if (packageCode != null && packageCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageCode. Length must be greater than or equal to 1.");
    }
    this.packageCode = packageCode;
  }


  public Label validateAddress(ValidateAddress validateAddress) {
    
    
    
    
    this.validateAddress = validateAddress;
    return this;
  }

   /**
   * Get validateAddress
   * @return validateAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ValidateAddress getValidateAddress() {
    return validateAddress;
  }


  public void setValidateAddress(ValidateAddress validateAddress) {
    
    
    
    this.validateAddress = validateAddress;
  }


   /**
   * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/) 
   * @return voided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/) ")

  public Boolean getVoided() {
    return voided;
  }




   /**
   * The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or &#x60;null&#x60; if the label has not been voided 
   * @return voidedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided ")

  public OffsetDateTime getVoidedAt() {
    return voidedAt;
  }




  public Label labelDownloadType(LabelDownloadType labelDownloadType) {
    
    
    
    
    this.labelDownloadType = labelDownloadType;
    return this;
  }

   /**
   * Get labelDownloadType
   * @return labelDownloadType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LabelDownloadType getLabelDownloadType() {
    return labelDownloadType;
  }


  public void setLabelDownloadType(LabelDownloadType labelDownloadType) {
    
    
    
    this.labelDownloadType = labelDownloadType;
  }


  public Label labelFormat(LabelFormat labelFormat) {
    
    
    
    
    this.labelFormat = labelFormat;
    return this;
  }

   /**
   * The file format that you want the label to be in.  We recommend &#x60;pdf&#x60; format because it is supported by all carriers, whereas some carriers do not support the &#x60;png&#x60; or &#x60;zpl&#x60; formats. 
   * @return labelFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats. ")

  public LabelFormat getLabelFormat() {
    return labelFormat;
  }


  public void setLabelFormat(LabelFormat labelFormat) {
    
    
    
    this.labelFormat = labelFormat;
  }


  public Label displayScheme(DisplayScheme displayScheme) {
    
    
    
    
    this.displayScheme = displayScheme;
    return this;
  }

   /**
   * The display format that the label should be shown in.
   * @return displayScheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The display format that the label should be shown in.")

  public DisplayScheme getDisplayScheme() {
    return displayScheme;
  }


  public void setDisplayScheme(DisplayScheme displayScheme) {
    
    
    
    this.displayScheme = displayScheme;
  }


  public Label labelLayout(LabelLayout labelLayout) {
    
    
    
    
    this.labelLayout = labelLayout;
    return this;
  }

   /**
   * The layout (size) that you want the label to be in.  The &#x60;label_format&#x60; determines which sizes are allowed.  &#x60;4x6&#x60; is supported for all label formats, whereas &#x60;letter&#x60; (8.5\&quot; x 11\&quot;) is only supported for &#x60;pdf&#x60; format. 
   * @return labelLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format. ")

  public LabelLayout getLabelLayout() {
    return labelLayout;
  }


  public void setLabelLayout(LabelLayout labelLayout) {
    
    
    
    this.labelLayout = labelLayout;
  }


   /**
   * Indicates whether the shipment is trackable, in which case the &#x60;tracking_status&#x60; field will reflect the current status and each package will have a &#x60;tracking_number&#x60;. 
   * @return trackable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`. ")

  public Boolean getTrackable() {
    return trackable;
  }




  public Label labelImageId(String labelImageId) {
    
    
    if (labelImageId != null && labelImageId.length() < 4) {
      throw new IllegalArgumentException("Invalid value for labelImageId. Length must be greater than or equal to 4.");
    }
    
    this.labelImageId = labelImageId;
    return this;
  }

   /**
   * Used to identify an image resource.
   * @return labelImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "img_DtBXupDBxREpHnwEXhTfgK", value = "Used to identify an image resource.")

  public String getLabelImageId() {
    return labelImageId;
  }


  public void setLabelImageId(String labelImageId) {
    
    
    if (labelImageId != null && labelImageId.length() < 4) {
      throw new IllegalArgumentException("Invalid value for labelImageId. Length must be greater than or equal to 4.");
    }
    this.labelImageId = labelImageId;
  }


  public Label carrierCode(String carrierCode) {
    
    
    
    
    this.carrierCode = carrierCode;
    return this;
  }

   /**
   * A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as &#x60;fedex&#x60;, &#x60;dhl_express&#x60;, &#x60;stamps_com&#x60;, etc. 
   * @return carrierCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dhl_express", value = "A [shipping carrier](https://www.shipengine.com/docs/carriers/setup/), such as `fedex`, `dhl_express`, `stamps_com`, etc. ")

  public String getCarrierCode() {
    return carrierCode;
  }


  public void setCarrierCode(String carrierCode) {
    
    
    
    this.carrierCode = carrierCode;
  }


  public Label trackingStatus(TrackingStatus trackingStatus) {
    
    
    
    
    this.trackingStatus = trackingStatus;
    return this;
  }

   /**
   * The current status of the package, such as &#x60;in_transit&#x60; or &#x60;delivered&#x60;
   * @return trackingStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current status of the package, such as `in_transit` or `delivered`")

  public TrackingStatus getTrackingStatus() {
    return trackingStatus;
  }


  public void setTrackingStatus(TrackingStatus trackingStatus) {
    
    
    
    this.trackingStatus = trackingStatus;
  }


  public Label labelDownload(LabelDownload labelDownload) {
    
    
    
    
    this.labelDownload = labelDownload;
    return this;
  }

   /**
   * Get labelDownload
   * @return labelDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LabelDownload getLabelDownload() {
    return labelDownload;
  }


  public void setLabelDownload(LabelDownload labelDownload) {
    
    
    
    this.labelDownload = labelDownload;
  }


  public Label formDownload(OptionalLinkNullable formDownload) {
    
    
    
    
    this.formDownload = formDownload;
    return this;
  }

   /**
   * The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it. 
   * @return formDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it. ")

  public OptionalLinkNullable getFormDownload() {
    return formDownload;
  }


  public void setFormDownload(OptionalLinkNullable formDownload) {
    
    
    
    this.formDownload = formDownload;
  }


  public Label insuranceClaim(LabelInsuranceClaim insuranceClaim) {
    
    
    
    
    this.insuranceClaim = insuranceClaim;
    return this;
  }

   /**
   * The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission. 
   * @return insuranceClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission. ")

  public LabelInsuranceClaim getInsuranceClaim() {
    return insuranceClaim;
  }


  public void setInsuranceClaim(LabelInsuranceClaim insuranceClaim) {
    
    
    
    this.insuranceClaim = insuranceClaim;
  }


   /**
   * The label&#39;s package(s).  &gt; **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn&#39;t allow it, an error will be returned. 
   * @return packages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label's package(s).  > **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned. ")

  public List<LabelPackagesInner> getPackages() {
    return packages;
  }




   /**
   * Additional information some carriers may provide by which to identify a given label in their system.  
   * @return alternativeIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information some carriers may provide by which to identify a given label in their system.  ")

  public List<AlternativeIdentifier> getAlternativeIdentifiers() {
    return alternativeIdentifiers;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Label instance itself
   */
  public Label putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Label label = (Label) o;
    return Objects.equals(this.labelId, label.labelId) &&
        Objects.equals(this.status, label.status) &&
        Objects.equals(this.shipmentId, label.shipmentId) &&
        Objects.equals(this.shipment, label.shipment) &&
        Objects.equals(this.shipDate, label.shipDate) &&
        Objects.equals(this.createdAt, label.createdAt) &&
        Objects.equals(this.shipmentCost, label.shipmentCost) &&
        Objects.equals(this.insuranceCost, label.insuranceCost) &&
        Objects.equals(this.requestedComparisonAmount, label.requestedComparisonAmount) &&
        Objects.equals(this.trackingNumber, label.trackingNumber) &&
        Objects.equals(this.isReturnLabel, label.isReturnLabel) &&
        Objects.equals(this.rmaNumber, label.rmaNumber) &&
        Objects.equals(this.isInternational, label.isInternational) &&
        Objects.equals(this.batchId, label.batchId) &&
        Objects.equals(this.carrierId, label.carrierId) &&
        Objects.equals(this.chargeEvent, label.chargeEvent) &&
        Objects.equals(this.outboundLabelId, label.outboundLabelId) &&
        Objects.equals(this.serviceCode, label.serviceCode) &&
        Objects.equals(this.testLabel, label.testLabel) &&
        Objects.equals(this.packageCode, label.packageCode) &&
        Objects.equals(this.validateAddress, label.validateAddress) &&
        Objects.equals(this.voided, label.voided) &&
        Objects.equals(this.voidedAt, label.voidedAt) &&
        Objects.equals(this.labelDownloadType, label.labelDownloadType) &&
        Objects.equals(this.labelFormat, label.labelFormat) &&
        Objects.equals(this.displayScheme, label.displayScheme) &&
        Objects.equals(this.labelLayout, label.labelLayout) &&
        Objects.equals(this.trackable, label.trackable) &&
        Objects.equals(this.labelImageId, label.labelImageId) &&
        Objects.equals(this.carrierCode, label.carrierCode) &&
        Objects.equals(this.trackingStatus, label.trackingStatus) &&
        Objects.equals(this.labelDownload, label.labelDownload) &&
        Objects.equals(this.formDownload, label.formDownload) &&
        Objects.equals(this.insuranceClaim, label.insuranceClaim) &&
        Objects.equals(this.packages, label.packages) &&
        Objects.equals(this.alternativeIdentifiers, label.alternativeIdentifiers)&&
        Objects.equals(this.additionalProperties, label.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(labelId, status, shipmentId, shipment, shipDate, createdAt, shipmentCost, insuranceCost, requestedComparisonAmount, trackingNumber, isReturnLabel, rmaNumber, isInternational, batchId, carrierId, chargeEvent, outboundLabelId, serviceCode, testLabel, packageCode, validateAddress, voided, voidedAt, labelDownloadType, labelFormat, displayScheme, labelLayout, trackable, labelImageId, carrierCode, trackingStatus, labelDownload, formDownload, insuranceClaim, packages, alternativeIdentifiers, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Label {\n");
    sb.append("    labelId: ").append(toIndentedString(labelId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    shipment: ").append(toIndentedString(shipment)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    shipmentCost: ").append(toIndentedString(shipmentCost)).append("\n");
    sb.append("    insuranceCost: ").append(toIndentedString(insuranceCost)).append("\n");
    sb.append("    requestedComparisonAmount: ").append(toIndentedString(requestedComparisonAmount)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    isReturnLabel: ").append(toIndentedString(isReturnLabel)).append("\n");
    sb.append("    rmaNumber: ").append(toIndentedString(rmaNumber)).append("\n");
    sb.append("    isInternational: ").append(toIndentedString(isInternational)).append("\n");
    sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
    sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
    sb.append("    chargeEvent: ").append(toIndentedString(chargeEvent)).append("\n");
    sb.append("    outboundLabelId: ").append(toIndentedString(outboundLabelId)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    testLabel: ").append(toIndentedString(testLabel)).append("\n");
    sb.append("    packageCode: ").append(toIndentedString(packageCode)).append("\n");
    sb.append("    validateAddress: ").append(toIndentedString(validateAddress)).append("\n");
    sb.append("    voided: ").append(toIndentedString(voided)).append("\n");
    sb.append("    voidedAt: ").append(toIndentedString(voidedAt)).append("\n");
    sb.append("    labelDownloadType: ").append(toIndentedString(labelDownloadType)).append("\n");
    sb.append("    labelFormat: ").append(toIndentedString(labelFormat)).append("\n");
    sb.append("    displayScheme: ").append(toIndentedString(displayScheme)).append("\n");
    sb.append("    labelLayout: ").append(toIndentedString(labelLayout)).append("\n");
    sb.append("    trackable: ").append(toIndentedString(trackable)).append("\n");
    sb.append("    labelImageId: ").append(toIndentedString(labelImageId)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    trackingStatus: ").append(toIndentedString(trackingStatus)).append("\n");
    sb.append("    labelDownload: ").append(toIndentedString(labelDownload)).append("\n");
    sb.append("    formDownload: ").append(toIndentedString(formDownload)).append("\n");
    sb.append("    insuranceClaim: ").append(toIndentedString(insuranceClaim)).append("\n");
    sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
    sb.append("    alternativeIdentifiers: ").append(toIndentedString(alternativeIdentifiers)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("label_id");
    openapiFields.add("status");
    openapiFields.add("shipment_id");
    openapiFields.add("shipment");
    openapiFields.add("ship_date");
    openapiFields.add("created_at");
    openapiFields.add("shipment_cost");
    openapiFields.add("insurance_cost");
    openapiFields.add("requested_comparison_amount");
    openapiFields.add("tracking_number");
    openapiFields.add("is_return_label");
    openapiFields.add("rma_number");
    openapiFields.add("is_international");
    openapiFields.add("batch_id");
    openapiFields.add("carrier_id");
    openapiFields.add("charge_event");
    openapiFields.add("outbound_label_id");
    openapiFields.add("service_code");
    openapiFields.add("test_label");
    openapiFields.add("package_code");
    openapiFields.add("validate_address");
    openapiFields.add("voided");
    openapiFields.add("voided_at");
    openapiFields.add("label_download_type");
    openapiFields.add("label_format");
    openapiFields.add("display_scheme");
    openapiFields.add("label_layout");
    openapiFields.add("trackable");
    openapiFields.add("label_image_id");
    openapiFields.add("carrier_code");
    openapiFields.add("tracking_status");
    openapiFields.add("label_download");
    openapiFields.add("form_download");
    openapiFields.add("insurance_claim");
    openapiFields.add("packages");
    openapiFields.add("alternative_identifiers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Label
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Label.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Label is not found in the empty JSON string", Label.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("label_id") != null && !jsonObj.get("label_id").isJsonNull()) && !jsonObj.get("label_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label_id").toString()));
      }
      if ((jsonObj.get("shipment_id") != null && !jsonObj.get("shipment_id").isJsonNull()) && !jsonObj.get("shipment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipment_id").toString()));
      }
      // validate the optional field `shipment`
      if (jsonObj.get("shipment") != null && !jsonObj.get("shipment").isJsonNull()) {
        PartialShipment.validateJsonObject(jsonObj.getAsJsonObject("shipment"));
      }
      // validate the optional field `shipment_cost`
      if (jsonObj.get("shipment_cost") != null && !jsonObj.get("shipment_cost").isJsonNull()) {
        MonetaryValue.validateJsonObject(jsonObj.getAsJsonObject("shipment_cost"));
      }
      // validate the optional field `insurance_cost`
      if (jsonObj.get("insurance_cost") != null && !jsonObj.get("insurance_cost").isJsonNull()) {
        MonetaryValue.validateJsonObject(jsonObj.getAsJsonObject("insurance_cost"));
      }
      // validate the optional field `requested_comparison_amount`
      if (jsonObj.get("requested_comparison_amount") != null && !jsonObj.get("requested_comparison_amount").isJsonNull()) {
        MonetaryValue.validateJsonObject(jsonObj.getAsJsonObject("requested_comparison_amount"));
      }
      if ((jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonNull()) && !jsonObj.get("tracking_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
      }
      if (!jsonObj.get("rma_number").isJsonNull() && (jsonObj.get("rma_number") != null && !jsonObj.get("rma_number").isJsonNull()) && !jsonObj.get("rma_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rma_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rma_number").toString()));
      }
      if ((jsonObj.get("batch_id") != null && !jsonObj.get("batch_id").isJsonNull()) && !jsonObj.get("batch_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batch_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batch_id").toString()));
      }
      if ((jsonObj.get("carrier_id") != null && !jsonObj.get("carrier_id").isJsonNull()) && !jsonObj.get("carrier_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_id").toString()));
      }
      if ((jsonObj.get("outbound_label_id") != null && !jsonObj.get("outbound_label_id").isJsonNull()) && !jsonObj.get("outbound_label_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outbound_label_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outbound_label_id").toString()));
      }
      if ((jsonObj.get("service_code") != null && !jsonObj.get("service_code").isJsonNull()) && !jsonObj.get("service_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_code").toString()));
      }
      if ((jsonObj.get("package_code") != null && !jsonObj.get("package_code").isJsonNull()) && !jsonObj.get("package_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `package_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("package_code").toString()));
      }
      // validate the optional field `voided_at`
      if (jsonObj.get("voided_at") != null && !jsonObj.get("voided_at").isJsonNull()) {
        OffsetDateTime.validateJsonObject(jsonObj.getAsJsonObject("voided_at"));
      }
      if (!jsonObj.get("label_image_id").isJsonNull() && (jsonObj.get("label_image_id") != null && !jsonObj.get("label_image_id").isJsonNull()) && !jsonObj.get("label_image_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label_image_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label_image_id").toString()));
      }
      if ((jsonObj.get("carrier_code") != null && !jsonObj.get("carrier_code").isJsonNull()) && !jsonObj.get("carrier_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_code").toString()));
      }
      // validate the optional field `label_download`
      if (jsonObj.get("label_download") != null && !jsonObj.get("label_download").isJsonNull()) {
        LabelDownload.validateJsonObject(jsonObj.getAsJsonObject("label_download"));
      }
      // validate the optional field `form_download`
      if (jsonObj.get("form_download") != null && !jsonObj.get("form_download").isJsonNull()) {
        OptionalLinkNullable.validateJsonObject(jsonObj.getAsJsonObject("form_download"));
      }
      // validate the optional field `insurance_claim`
      if (jsonObj.get("insurance_claim") != null && !jsonObj.get("insurance_claim").isJsonNull()) {
        LabelInsuranceClaim.validateJsonObject(jsonObj.getAsJsonObject("insurance_claim"));
      }
      if (jsonObj.get("packages") != null && !jsonObj.get("packages").isJsonNull()) {
        JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
        if (jsonArraypackages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
          }

          // validate the optional field `packages` (array)
          for (int i = 0; i < jsonArraypackages.size(); i++) {
            LabelPackagesInner.validateJsonObject(jsonArraypackages.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("alternative_identifiers") != null && !jsonObj.get("alternative_identifiers").isJsonNull()) {
        JsonArray jsonArrayalternativeIdentifiers = jsonObj.getAsJsonArray("alternative_identifiers");
        if (jsonArrayalternativeIdentifiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("alternative_identifiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `alternative_identifiers` to be an array in the JSON string but got `%s`", jsonObj.get("alternative_identifiers").toString()));
          }

          // validate the optional field `alternative_identifiers` (array)
          for (int i = 0; i < jsonArrayalternativeIdentifiers.size(); i++) {
            AlternativeIdentifier.validateJsonObject(jsonArrayalternativeIdentifiers.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Label.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Label' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Label> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Label.class));

       return (TypeAdapter<T>) new TypeAdapter<Label>() {
           @Override
           public void write(JsonWriter out, Label value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Label read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Label instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Label given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Label
  * @throws IOException if the JSON string is invalid with respect to Label
  */
  public static Label fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Label.class);
  }

 /**
  * Convert an instance of Label to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

