/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.DangerousAmount;
import com.konfigthis.client.model.PackagingGroup;
import com.konfigthis.client.model.PackagingInstructionSection;
import com.konfigthis.client.model.RegulationLevel;
import com.konfigthis.client.model.TransportMean;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Dangerous goods attribute associated with the product 
 */
@ApiModel(description = "Dangerous goods attribute associated with the product ")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DangerousGoods {
  public static final String SERIALIZED_NAME_ID_NUMBER = "id_number";
  @SerializedName(SERIALIZED_NAME_ID_NUMBER)
  private String idNumber;

  public static final String SERIALIZED_NAME_SHIPPING_NAME = "shipping_name";
  @SerializedName(SERIALIZED_NAME_SHIPPING_NAME)
  private String shippingName;

  public static final String SERIALIZED_NAME_TECHNICAL_NAME = "technical_name";
  @SerializedName(SERIALIZED_NAME_TECHNICAL_NAME)
  private String technicalName;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS = "product_class";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS)
  private String productClass;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS_SUBSIDIARY = "product_class_subsidiary";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS_SUBSIDIARY)
  private String productClassSubsidiary;

  public static final String SERIALIZED_NAME_PACKAGING_GROUP = "packaging_group";
  @SerializedName(SERIALIZED_NAME_PACKAGING_GROUP)
  private PackagingGroup packagingGroup;

  public static final String SERIALIZED_NAME_DANGEROUS_AMOUNT = "dangerous_amount";
  @SerializedName(SERIALIZED_NAME_DANGEROUS_AMOUNT)
  private DangerousAmount dangerousAmount;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity = 0;

  public static final String SERIALIZED_NAME_PACKAGING_INSTRUCTION = "packaging_instruction";
  @SerializedName(SERIALIZED_NAME_PACKAGING_INSTRUCTION)
  private String packagingInstruction;

  public static final String SERIALIZED_NAME_PACKAGING_INSTRUCTION_SECTION = "packaging_instruction_section";
  @SerializedName(SERIALIZED_NAME_PACKAGING_INSTRUCTION_SECTION)
  private PackagingInstructionSection packagingInstructionSection;

  public static final String SERIALIZED_NAME_PACKAGING_TYPE = "packaging_type";
  @SerializedName(SERIALIZED_NAME_PACKAGING_TYPE)
  private String packagingType;

  public static final String SERIALIZED_NAME_TRANSPORT_MEAN = "transport_mean";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_MEAN)
  private TransportMean transportMean;

  public static final String SERIALIZED_NAME_TRANSPORT_CATEGORY = "transport_category";
  @SerializedName(SERIALIZED_NAME_TRANSPORT_CATEGORY)
  private String transportCategory;

  public static final String SERIALIZED_NAME_REGULATION_AUTHORITY = "regulation_authority";
  @SerializedName(SERIALIZED_NAME_REGULATION_AUTHORITY)
  private String regulationAuthority;

  public static final String SERIALIZED_NAME_REGULATION_LEVEL = "regulation_level";
  @SerializedName(SERIALIZED_NAME_REGULATION_LEVEL)
  private RegulationLevel regulationLevel;

  public static final String SERIALIZED_NAME_RADIOACTIVE = "radioactive";
  @SerializedName(SERIALIZED_NAME_RADIOACTIVE)
  private Boolean radioactive;

  public static final String SERIALIZED_NAME_REPORTABLE_QUANTITY = "reportable_quantity";
  @SerializedName(SERIALIZED_NAME_REPORTABLE_QUANTITY)
  private Boolean reportableQuantity;

  public static final String SERIALIZED_NAME_TUNNEL_CODE = "tunnel_code";
  @SerializedName(SERIALIZED_NAME_TUNNEL_CODE)
  private String tunnelCode;

  public static final String SERIALIZED_NAME_ADDITIONAL_DESCRIPTION = "additional_description";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DESCRIPTION)
  private String additionalDescription;

  public DangerousGoods() {
  }

  public DangerousGoods idNumber(String idNumber) {
    
    
    
    
    this.idNumber = idNumber;
    return this;
  }

   /**
   * UN number to identify the dangerous goods.
   * @return idNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UN number to identify the dangerous goods.")

  public String getIdNumber() {
    return idNumber;
  }


  public void setIdNumber(String idNumber) {
    
    
    
    this.idNumber = idNumber;
  }


  public DangerousGoods shippingName(String shippingName) {
    
    
    
    
    this.shippingName = shippingName;
    return this;
  }

   /**
   * Trade description of the dangerous goods.
   * @return shippingName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Trade description of the dangerous goods.")

  public String getShippingName() {
    return shippingName;
  }


  public void setShippingName(String shippingName) {
    
    
    
    this.shippingName = shippingName;
  }


  public DangerousGoods technicalName(String technicalName) {
    
    
    
    
    this.technicalName = technicalName;
    return this;
  }

   /**
   * Recognized Technical or chemical name of dangerous goods.
   * @return technicalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Recognized Technical or chemical name of dangerous goods.")

  public String getTechnicalName() {
    return technicalName;
  }


  public void setTechnicalName(String technicalName) {
    
    
    
    this.technicalName = technicalName;
  }


  public DangerousGoods productClass(String productClass) {
    
    
    
    
    this.productClass = productClass;
    return this;
  }

   /**
   * Dangerous goods product class based on regulation.
   * @return productClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dangerous goods product class based on regulation.")

  public String getProductClass() {
    return productClass;
  }


  public void setProductClass(String productClass) {
    
    
    
    this.productClass = productClass;
  }


  public DangerousGoods productClassSubsidiary(String productClassSubsidiary) {
    
    
    
    
    this.productClassSubsidiary = productClassSubsidiary;
    return this;
  }

   /**
   * A secondary of product class for substances presenting more than one particular hazard
   * @return productClassSubsidiary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A secondary of product class for substances presenting more than one particular hazard")

  public String getProductClassSubsidiary() {
    return productClassSubsidiary;
  }


  public void setProductClassSubsidiary(String productClassSubsidiary) {
    
    
    
    this.productClassSubsidiary = productClassSubsidiary;
  }


  public DangerousGoods packagingGroup(PackagingGroup packagingGroup) {
    
    
    
    
    this.packagingGroup = packagingGroup;
    return this;
  }

   /**
   * Get packagingGroup
   * @return packagingGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PackagingGroup getPackagingGroup() {
    return packagingGroup;
  }


  public void setPackagingGroup(PackagingGroup packagingGroup) {
    
    
    
    this.packagingGroup = packagingGroup;
  }


  public DangerousGoods dangerousAmount(DangerousAmount dangerousAmount) {
    
    
    
    
    this.dangerousAmount = dangerousAmount;
    return this;
  }

   /**
   * This model represents the amount of the dangerous goods.
   * @return dangerousAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This model represents the amount of the dangerous goods.")

  public DangerousAmount getDangerousAmount() {
    return dangerousAmount;
  }


  public void setDangerousAmount(DangerousAmount dangerousAmount) {
    
    
    
    this.dangerousAmount = dangerousAmount;
  }


  public DangerousGoods quantity(Integer quantity) {
    if (quantity != null && quantity < 0) {
      throw new IllegalArgumentException("Invalid value for quantity. Must be greater than or equal to 0.");
    }
    
    
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity of dangerous goods.
   * minimum: 0
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Quantity of dangerous goods.")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    if (quantity != null && quantity < 0) {
      throw new IllegalArgumentException("Invalid value for quantity. Must be greater than or equal to 0.");
    }
    
    
    this.quantity = quantity;
  }


  public DangerousGoods packagingInstruction(String packagingInstruction) {
    
    
    
    
    this.packagingInstruction = packagingInstruction;
    return this;
  }

   /**
   * The specific standardized packaging instructions from the relevant regulatory agency that have been applied to the parcel/container.
   * @return packagingInstruction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The specific standardized packaging instructions from the relevant regulatory agency that have been applied to the parcel/container.")

  public String getPackagingInstruction() {
    return packagingInstruction;
  }


  public void setPackagingInstruction(String packagingInstruction) {
    
    
    
    this.packagingInstruction = packagingInstruction;
  }


  public DangerousGoods packagingInstructionSection(PackagingInstructionSection packagingInstructionSection) {
    
    
    
    
    this.packagingInstructionSection = packagingInstructionSection;
    return this;
  }

   /**
   * Get packagingInstructionSection
   * @return packagingInstructionSection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PackagingInstructionSection getPackagingInstructionSection() {
    return packagingInstructionSection;
  }


  public void setPackagingInstructionSection(PackagingInstructionSection packagingInstructionSection) {
    
    
    
    this.packagingInstructionSection = packagingInstructionSection;
  }


  public DangerousGoods packagingType(String packagingType) {
    
    
    
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * The type of exterior packaging used to contain the dangerous good.
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of exterior packaging used to contain the dangerous good.")

  public String getPackagingType() {
    return packagingType;
  }


  public void setPackagingType(String packagingType) {
    
    
    
    this.packagingType = packagingType;
  }


  public DangerousGoods transportMean(TransportMean transportMean) {
    
    
    
    
    this.transportMean = transportMean;
    return this;
  }

   /**
   * Get transportMean
   * @return transportMean
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TransportMean getTransportMean() {
    return transportMean;
  }


  public void setTransportMean(TransportMean transportMean) {
    
    
    
    this.transportMean = transportMean;
  }


  public DangerousGoods transportCategory(String transportCategory) {
    
    
    
    
    this.transportCategory = transportCategory;
    return this;
  }

   /**
   * Transport category assign to dangerous goods for the transport purpose.
   * @return transportCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transport category assign to dangerous goods for the transport purpose.")

  public String getTransportCategory() {
    return transportCategory;
  }


  public void setTransportCategory(String transportCategory) {
    
    
    
    this.transportCategory = transportCategory;
  }


  public DangerousGoods regulationAuthority(String regulationAuthority) {
    
    
    
    
    this.regulationAuthority = regulationAuthority;
    return this;
  }

   /**
   * Name of the regulatory authority.
   * @return regulationAuthority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the regulatory authority.")

  public String getRegulationAuthority() {
    return regulationAuthority;
  }


  public void setRegulationAuthority(String regulationAuthority) {
    
    
    
    this.regulationAuthority = regulationAuthority;
  }


  public DangerousGoods regulationLevel(RegulationLevel regulationLevel) {
    
    
    
    
    this.regulationLevel = regulationLevel;
    return this;
  }

   /**
   * Get regulationLevel
   * @return regulationLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegulationLevel getRegulationLevel() {
    return regulationLevel;
  }


  public void setRegulationLevel(RegulationLevel regulationLevel) {
    
    
    
    this.regulationLevel = regulationLevel;
  }


  public DangerousGoods radioactive(Boolean radioactive) {
    
    
    
    
    this.radioactive = radioactive;
    return this;
  }

   /**
   * Indication if the substance is radioactive.
   * @return radioactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indication if the substance is radioactive.")

  public Boolean getRadioactive() {
    return radioactive;
  }


  public void setRadioactive(Boolean radioactive) {
    
    
    
    this.radioactive = radioactive;
  }


  public DangerousGoods reportableQuantity(Boolean reportableQuantity) {
    
    
    
    
    this.reportableQuantity = reportableQuantity;
    return this;
  }

   /**
   * Indication if the substance needs to be reported to regulatory authority based on the quantity.
   * @return reportableQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indication if the substance needs to be reported to regulatory authority based on the quantity.")

  public Boolean getReportableQuantity() {
    return reportableQuantity;
  }


  public void setReportableQuantity(Boolean reportableQuantity) {
    
    
    
    this.reportableQuantity = reportableQuantity;
  }


  public DangerousGoods tunnelCode(String tunnelCode) {
    
    
    
    
    this.tunnelCode = tunnelCode;
    return this;
  }

   /**
   * Defines which types of tunnels the shipment is allowed to go through
   * @return tunnelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines which types of tunnels the shipment is allowed to go through")

  public String getTunnelCode() {
    return tunnelCode;
  }


  public void setTunnelCode(String tunnelCode) {
    
    
    
    this.tunnelCode = tunnelCode;
  }


  public DangerousGoods additionalDescription(String additionalDescription) {
    
    
    
    
    this.additionalDescription = additionalDescription;
    return this;
  }

   /**
   * Provider additonal description regarding the dangerous goods. This is used as a placed holder to provider additional context and varies by carrier
   * @return additionalDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Provider additonal description regarding the dangerous goods. This is used as a placed holder to provider additional context and varies by carrier")

  public String getAdditionalDescription() {
    return additionalDescription;
  }


  public void setAdditionalDescription(String additionalDescription) {
    
    
    
    this.additionalDescription = additionalDescription;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DangerousGoods instance itself
   */
  public DangerousGoods putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DangerousGoods dangerousGoods = (DangerousGoods) o;
    return Objects.equals(this.idNumber, dangerousGoods.idNumber) &&
        Objects.equals(this.shippingName, dangerousGoods.shippingName) &&
        Objects.equals(this.technicalName, dangerousGoods.technicalName) &&
        Objects.equals(this.productClass, dangerousGoods.productClass) &&
        Objects.equals(this.productClassSubsidiary, dangerousGoods.productClassSubsidiary) &&
        Objects.equals(this.packagingGroup, dangerousGoods.packagingGroup) &&
        Objects.equals(this.dangerousAmount, dangerousGoods.dangerousAmount) &&
        Objects.equals(this.quantity, dangerousGoods.quantity) &&
        Objects.equals(this.packagingInstruction, dangerousGoods.packagingInstruction) &&
        Objects.equals(this.packagingInstructionSection, dangerousGoods.packagingInstructionSection) &&
        Objects.equals(this.packagingType, dangerousGoods.packagingType) &&
        Objects.equals(this.transportMean, dangerousGoods.transportMean) &&
        Objects.equals(this.transportCategory, dangerousGoods.transportCategory) &&
        Objects.equals(this.regulationAuthority, dangerousGoods.regulationAuthority) &&
        Objects.equals(this.regulationLevel, dangerousGoods.regulationLevel) &&
        Objects.equals(this.radioactive, dangerousGoods.radioactive) &&
        Objects.equals(this.reportableQuantity, dangerousGoods.reportableQuantity) &&
        Objects.equals(this.tunnelCode, dangerousGoods.tunnelCode) &&
        Objects.equals(this.additionalDescription, dangerousGoods.additionalDescription)&&
        Objects.equals(this.additionalProperties, dangerousGoods.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(idNumber, shippingName, technicalName, productClass, productClassSubsidiary, packagingGroup, dangerousAmount, quantity, packagingInstruction, packagingInstructionSection, packagingType, transportMean, transportCategory, regulationAuthority, regulationLevel, radioactive, reportableQuantity, tunnelCode, additionalDescription, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DangerousGoods {\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("    shippingName: ").append(toIndentedString(shippingName)).append("\n");
    sb.append("    technicalName: ").append(toIndentedString(technicalName)).append("\n");
    sb.append("    productClass: ").append(toIndentedString(productClass)).append("\n");
    sb.append("    productClassSubsidiary: ").append(toIndentedString(productClassSubsidiary)).append("\n");
    sb.append("    packagingGroup: ").append(toIndentedString(packagingGroup)).append("\n");
    sb.append("    dangerousAmount: ").append(toIndentedString(dangerousAmount)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    packagingInstruction: ").append(toIndentedString(packagingInstruction)).append("\n");
    sb.append("    packagingInstructionSection: ").append(toIndentedString(packagingInstructionSection)).append("\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    transportMean: ").append(toIndentedString(transportMean)).append("\n");
    sb.append("    transportCategory: ").append(toIndentedString(transportCategory)).append("\n");
    sb.append("    regulationAuthority: ").append(toIndentedString(regulationAuthority)).append("\n");
    sb.append("    regulationLevel: ").append(toIndentedString(regulationLevel)).append("\n");
    sb.append("    radioactive: ").append(toIndentedString(radioactive)).append("\n");
    sb.append("    reportableQuantity: ").append(toIndentedString(reportableQuantity)).append("\n");
    sb.append("    tunnelCode: ").append(toIndentedString(tunnelCode)).append("\n");
    sb.append("    additionalDescription: ").append(toIndentedString(additionalDescription)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id_number");
    openapiFields.add("shipping_name");
    openapiFields.add("technical_name");
    openapiFields.add("product_class");
    openapiFields.add("product_class_subsidiary");
    openapiFields.add("packaging_group");
    openapiFields.add("dangerous_amount");
    openapiFields.add("quantity");
    openapiFields.add("packaging_instruction");
    openapiFields.add("packaging_instruction_section");
    openapiFields.add("packaging_type");
    openapiFields.add("transport_mean");
    openapiFields.add("transport_category");
    openapiFields.add("regulation_authority");
    openapiFields.add("regulation_level");
    openapiFields.add("radioactive");
    openapiFields.add("reportable_quantity");
    openapiFields.add("tunnel_code");
    openapiFields.add("additional_description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DangerousGoods
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DangerousGoods.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DangerousGoods is not found in the empty JSON string", DangerousGoods.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("id_number").isJsonNull() && (jsonObj.get("id_number") != null && !jsonObj.get("id_number").isJsonNull()) && !jsonObj.get("id_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_number").toString()));
      }
      if (!jsonObj.get("shipping_name").isJsonNull() && (jsonObj.get("shipping_name") != null && !jsonObj.get("shipping_name").isJsonNull()) && !jsonObj.get("shipping_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_name").toString()));
      }
      if (!jsonObj.get("technical_name").isJsonNull() && (jsonObj.get("technical_name") != null && !jsonObj.get("technical_name").isJsonNull()) && !jsonObj.get("technical_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `technical_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("technical_name").toString()));
      }
      if (!jsonObj.get("product_class").isJsonNull() && (jsonObj.get("product_class") != null && !jsonObj.get("product_class").isJsonNull()) && !jsonObj.get("product_class").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_class` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_class").toString()));
      }
      if (!jsonObj.get("product_class_subsidiary").isJsonNull() && (jsonObj.get("product_class_subsidiary") != null && !jsonObj.get("product_class_subsidiary").isJsonNull()) && !jsonObj.get("product_class_subsidiary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_class_subsidiary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_class_subsidiary").toString()));
      }
      // validate the optional field `dangerous_amount`
      if (jsonObj.get("dangerous_amount") != null && !jsonObj.get("dangerous_amount").isJsonNull()) {
        DangerousAmount.validateJsonObject(jsonObj.getAsJsonObject("dangerous_amount"));
      }
      if (!jsonObj.get("packaging_instruction").isJsonNull() && (jsonObj.get("packaging_instruction") != null && !jsonObj.get("packaging_instruction").isJsonNull()) && !jsonObj.get("packaging_instruction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packaging_instruction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packaging_instruction").toString()));
      }
      if (!jsonObj.get("packaging_type").isJsonNull() && (jsonObj.get("packaging_type") != null && !jsonObj.get("packaging_type").isJsonNull()) && !jsonObj.get("packaging_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packaging_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packaging_type").toString()));
      }
      if (!jsonObj.get("transport_category").isJsonNull() && (jsonObj.get("transport_category") != null && !jsonObj.get("transport_category").isJsonNull()) && !jsonObj.get("transport_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transport_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transport_category").toString()));
      }
      if (!jsonObj.get("regulation_authority").isJsonNull() && (jsonObj.get("regulation_authority") != null && !jsonObj.get("regulation_authority").isJsonNull()) && !jsonObj.get("regulation_authority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `regulation_authority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("regulation_authority").toString()));
      }
      if (!jsonObj.get("tunnel_code").isJsonNull() && (jsonObj.get("tunnel_code") != null && !jsonObj.get("tunnel_code").isJsonNull()) && !jsonObj.get("tunnel_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tunnel_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tunnel_code").toString()));
      }
      if (!jsonObj.get("additional_description").isJsonNull() && (jsonObj.get("additional_description") != null && !jsonObj.get("additional_description").isJsonNull()) && !jsonObj.get("additional_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DangerousGoods.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DangerousGoods' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DangerousGoods> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DangerousGoods.class));

       return (TypeAdapter<T>) new TypeAdapter<DangerousGoods>() {
           @Override
           public void write(JsonWriter out, DangerousGoods value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DangerousGoods read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DangerousGoods instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DangerousGoods given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DangerousGoods
  * @throws IOException if the JSON string is invalid with respect to DangerousGoods
  */
  public static DangerousGoods fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DangerousGoods.class);
  }

 /**
  * Convert an instance of DangerousGoods to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

