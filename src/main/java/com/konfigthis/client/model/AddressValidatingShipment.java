/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AdvancedShipmentOptions;
import com.konfigthis.client.model.DeliveryConfirmation;
import com.konfigthis.client.model.InsuranceProvider;
import com.konfigthis.client.model.InternationalShipmentOptionsNullable;
import com.konfigthis.client.model.ModelPackage;
import com.konfigthis.client.model.OrderSourceName;
import com.konfigthis.client.model.ShipmentItem;
import com.konfigthis.client.model.ShipmentStatus;
import com.konfigthis.client.model.ShippingAddress;
import com.konfigthis.client.model.ShippingAddressTo;
import com.konfigthis.client.model.Tag;
import com.konfigthis.client.model.TaxIdentifier;
import com.konfigthis.client.model.ValidateAddress;
import com.konfigthis.client.model.Weight;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * An address validating shipment
 */
@ApiModel(description = "An address validating shipment")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddressValidatingShipment {
  public static final String SERIALIZED_NAME_VALIDATE_ADDRESS = "validate_address";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ADDRESS)
  private ValidateAddress validateAddress;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Tag> tags = null;

  public static final String SERIALIZED_NAME_SHIPMENT_ID = "shipment_id";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ID)
  private String shipmentId;

  public static final String SERIALIZED_NAME_CARRIER_ID = "carrier_id";
  @SerializedName(SERIALIZED_NAME_CARRIER_ID)
  private String carrierId;

  public static final String SERIALIZED_NAME_SERVICE_CODE = "service_code";
  @SerializedName(SERIALIZED_NAME_SERVICE_CODE)
  private String serviceCode;

  public static final String SERIALIZED_NAME_EXTERNAL_ORDER_ID = "external_order_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ORDER_ID)
  private String externalOrderId;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ShipmentItem> items = null;

  public static final String SERIALIZED_NAME_TAX_IDENTIFIERS = "tax_identifiers";
  @SerializedName(SERIALIZED_NAME_TAX_IDENTIFIERS)
  private List<TaxIdentifier> taxIdentifiers = null;

  public static final String SERIALIZED_NAME_EXTERNAL_SHIPMENT_ID = "external_shipment_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_SHIPMENT_ID)
  private String externalShipmentId;

  public static final String SERIALIZED_NAME_SHIPMENT_NUMBER = "shipment_number";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_NUMBER)
  private String shipmentNumber;

  public static final String SERIALIZED_NAME_SHIP_DATE = "ship_date";
  @SerializedName(SERIALIZED_NAME_SHIP_DATE)
  private OffsetDateTime shipDate;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modified_at";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_SHIPMENT_STATUS = "shipment_status";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_STATUS)
  private ShipmentStatus shipmentStatus;

  public static final String SERIALIZED_NAME_SHIP_TO = "ship_to";
  @SerializedName(SERIALIZED_NAME_SHIP_TO)
  private ShippingAddressTo shipTo;

  public static final String SERIALIZED_NAME_SHIP_FROM = "ship_from";
  @SerializedName(SERIALIZED_NAME_SHIP_FROM)
  private ShippingAddress shipFrom;

  public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouse_id";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
  private String warehouseId;

  public static final String SERIALIZED_NAME_RETURN_TO = "return_to";
  @SerializedName(SERIALIZED_NAME_RETURN_TO)
  private ShippingAddress returnTo;

  public static final String SERIALIZED_NAME_IS_RETURN = "is_return";
  @SerializedName(SERIALIZED_NAME_IS_RETURN)
  private Boolean isReturn = false;

  public static final String SERIALIZED_NAME_CONFIRMATION = "confirmation";
  @SerializedName(SERIALIZED_NAME_CONFIRMATION)
  private DeliveryConfirmation confirmation;

  public static final String SERIALIZED_NAME_CUSTOMS = "customs";
  @SerializedName(SERIALIZED_NAME_CUSTOMS)
  private InternationalShipmentOptionsNullable customs;

  public static final String SERIALIZED_NAME_ADVANCED_OPTIONS = "advanced_options";
  @SerializedName(SERIALIZED_NAME_ADVANCED_OPTIONS)
  private AdvancedShipmentOptions advancedOptions;

  public static final String SERIALIZED_NAME_INSURANCE_PROVIDER = "insurance_provider";
  @SerializedName(SERIALIZED_NAME_INSURANCE_PROVIDER)
  private InsuranceProvider insuranceProvider;

  public static final String SERIALIZED_NAME_ORDER_SOURCE_CODE = "order_source_code";
  @SerializedName(SERIALIZED_NAME_ORDER_SOURCE_CODE)
  private OrderSourceName orderSourceCode;

  public static final String SERIALIZED_NAME_PACKAGES = "packages";
  @SerializedName(SERIALIZED_NAME_PACKAGES)
  private List<ModelPackage> packages = null;

  public static final String SERIALIZED_NAME_TOTAL_WEIGHT = "total_weight";
  @SerializedName(SERIALIZED_NAME_TOTAL_WEIGHT)
  private Weight totalWeight;

  public static final String SERIALIZED_NAME_COMPARISON_RATE_TYPE = "comparison_rate_type";
  @SerializedName(SERIALIZED_NAME_COMPARISON_RATE_TYPE)
  private String comparisonRateType;

  public AddressValidatingShipment() {
  }

  
  public AddressValidatingShipment(
     List<Tag> tags
  ) {
    this();
    this.tags = tags;
  }

  public AddressValidatingShipment validateAddress(ValidateAddress validateAddress) {
    
    
    
    
    this.validateAddress = validateAddress;
    return this;
  }

   /**
   * Get validateAddress
   * @return validateAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ValidateAddress getValidateAddress() {
    return validateAddress;
  }


  public void setValidateAddress(ValidateAddress validateAddress) {
    
    
    
    this.validateAddress = validateAddress;
  }


   /**
   * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags. 
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags. ")

  public List<Tag> getTags() {
    return tags;
  }




  public AddressValidatingShipment shipmentId(String shipmentId) {
    
    
    if (shipmentId != null && shipmentId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for shipmentId. Length must be greater than or equal to 1.");
    }
    
    this.shipmentId = shipmentId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return shipmentId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "se-28529731", required = true, value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getShipmentId() {
    return shipmentId;
  }


  public void setShipmentId(String shipmentId) {
    
    
    if (shipmentId != null && shipmentId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for shipmentId. Length must be greater than or equal to 1.");
    }
    this.shipmentId = shipmentId;
  }


  public AddressValidatingShipment carrierId(String carrierId) {
    
    
    if (carrierId != null && carrierId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for carrierId. Length must be greater than or equal to 1.");
    }
    
    this.carrierId = carrierId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return carrierId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "se-28529731", required = true, value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getCarrierId() {
    return carrierId;
  }


  public void setCarrierId(String carrierId) {
    
    
    if (carrierId != null && carrierId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for carrierId. Length must be greater than or equal to 1.");
    }
    this.carrierId = carrierId;
  }


  public AddressValidatingShipment serviceCode(String serviceCode) {
    
    
    
    
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as &#x60;fedex_ground&#x60;, &#x60;usps_first_class_mail&#x60;, &#x60;flat_rate_envelope&#x60;, etc. 
   * @return serviceCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "usps_first_class_mail", required = true, value = "A [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/), such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc. ")

  public String getServiceCode() {
    return serviceCode;
  }


  public void setServiceCode(String serviceCode) {
    
    
    
    this.serviceCode = serviceCode;
  }


  public AddressValidatingShipment externalOrderId(String externalOrderId) {
    
    
    
    
    this.externalOrderId = externalOrderId;
    return this;
  }

   /**
   * ID that the Order Source assigned
   * @return externalOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID that the Order Source assigned")

  public String getExternalOrderId() {
    return externalOrderId;
  }


  public void setExternalOrderId(String externalOrderId) {
    
    
    
    this.externalOrderId = externalOrderId;
  }


  public AddressValidatingShipment items(List<ShipmentItem> items) {
    
    
    
    
    this.items = items;
    return this;
  }

  public AddressValidatingShipment addItemsItem(ShipmentItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Describe the packages included in this shipment as related to potential metadata that was imported from external order sources 
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Describe the packages included in this shipment as related to potential metadata that was imported from external order sources ")

  public List<ShipmentItem> getItems() {
    return items;
  }


  public void setItems(List<ShipmentItem> items) {
    
    
    
    this.items = items;
  }


  public AddressValidatingShipment taxIdentifiers(List<TaxIdentifier> taxIdentifiers) {
    
    
    
    
    this.taxIdentifiers = taxIdentifiers;
    return this;
  }

  public AddressValidatingShipment addTaxIdentifiersItem(TaxIdentifier taxIdentifiersItem) {
    if (this.taxIdentifiers == null) {
      this.taxIdentifiers = new ArrayList<>();
    }
    this.taxIdentifiers.add(taxIdentifiersItem);
    return this;
  }

   /**
   * Get taxIdentifiers
   * @return taxIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaxIdentifier> getTaxIdentifiers() {
    return taxIdentifiers;
  }


  public void setTaxIdentifiers(List<TaxIdentifier> taxIdentifiers) {
    
    
    
    this.taxIdentifiers = taxIdentifiers;
  }


  public AddressValidatingShipment externalShipmentId(String externalShipmentId) {
    
    
    
    
    this.externalShipmentId = externalShipmentId;
    return this;
  }

   /**
   * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  &gt; **Warning:** The &#x60;external_shipment_id&#x60; is limited to 50 characters. Any additional characters will be truncated. 
   * @return externalShipmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.  > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated. ")

  public String getExternalShipmentId() {
    return externalShipmentId;
  }


  public void setExternalShipmentId(String externalShipmentId) {
    
    
    
    this.externalShipmentId = externalShipmentId;
  }


  public AddressValidatingShipment shipmentNumber(String shipmentNumber) {
    
    
    
    
    this.shipmentNumber = shipmentNumber;
    return this;
  }

   /**
   * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  &gt; **Warning:** The &#x60;shipment_number&#x60; is limited to 50 characters. Any additional characters will be truncated. 
   * @return shipmentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.  > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated. ")

  public String getShipmentNumber() {
    return shipmentNumber;
  }


  public void setShipmentNumber(String shipmentNumber) {
    
    
    
    this.shipmentNumber = shipmentNumber;
  }


  public AddressValidatingShipment shipDate(OffsetDateTime shipDate) {
    
    
    
    
    this.shipDate = shipDate;
    return this;
  }

   /**
   * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to &#x60;00:00:00&#x60; UTC by ShipEngine. 
   * @return shipDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-09-23T00:00Z", value = "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date, but not a specific time.  The value _may_ contain a time component, but it will be set to `00:00:00` UTC by ShipEngine. ")

  public OffsetDateTime getShipDate() {
    return shipDate;
  }


  public void setShipDate(OffsetDateTime shipDate) {
    
    
    
    this.shipDate = shipDate;
  }


  public AddressValidatingShipment createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. 
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-09-23T15:00Z", value = "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. ")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public AddressValidatingShipment modifiedAt(OffsetDateTime modifiedAt) {
    
    
    
    
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. 
   * @return modifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-09-23T15:00Z", value = "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time. ")

  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }


  public void setModifiedAt(OffsetDateTime modifiedAt) {
    
    
    
    this.modifiedAt = modifiedAt;
  }


  public AddressValidatingShipment shipmentStatus(ShipmentStatus shipmentStatus) {
    
    
    
    
    this.shipmentStatus = shipmentStatus;
    return this;
  }

   /**
   * The current status of the shipment
   * @return shipmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current status of the shipment")

  public ShipmentStatus getShipmentStatus() {
    return shipmentStatus;
  }


  public void setShipmentStatus(ShipmentStatus shipmentStatus) {
    
    
    
    this.shipmentStatus = shipmentStatus;
  }


  public AddressValidatingShipment shipTo(ShippingAddressTo shipTo) {
    
    
    
    
    this.shipTo = shipTo;
    return this;
  }

   /**
   * The recipient&#39;s mailing address
   * @return shipTo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The recipient's mailing address")

  public ShippingAddressTo getShipTo() {
    return shipTo;
  }


  public void setShipTo(ShippingAddressTo shipTo) {
    
    
    
    this.shipTo = shipTo;
  }


  public AddressValidatingShipment shipFrom(ShippingAddress shipFrom) {
    
    
    
    
    this.shipFrom = shipFrom;
    return this;
  }

   /**
   * The shipment&#39;s origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/).  Then you can simply specify the &#x60;warehouse_id&#x60; rather than the complete address each time. 
   * @return shipFrom
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/).  Then you can simply specify the `warehouse_id` rather than the complete address each time. ")

  public ShippingAddress getShipFrom() {
    return shipFrom;
  }


  public void setShipFrom(ShippingAddress shipFrom) {
    
    
    
    this.shipFrom = shipFrom;
  }


  public AddressValidatingShipment warehouseId(String warehouseId) {
    
    
    if (warehouseId != null && warehouseId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for warehouseId. Length must be greater than or equal to 1.");
    }
    
    this.warehouseId = warehouseId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return warehouseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getWarehouseId() {
    return warehouseId;
  }


  public void setWarehouseId(String warehouseId) {
    
    
    if (warehouseId != null && warehouseId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for warehouseId. Length must be greater than or equal to 1.");
    }
    this.warehouseId = warehouseId;
  }


  public AddressValidatingShipment returnTo(ShippingAddress returnTo) {
    
    
    
    
    this.returnTo = returnTo;
    return this;
  }

   /**
   * The return address for this shipment.  Defaults to the &#x60;ship_from&#x60; address. 
   * @return returnTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The return address for this shipment.  Defaults to the `ship_from` address. ")

  public ShippingAddress getReturnTo() {
    return returnTo;
  }


  public void setReturnTo(ShippingAddress returnTo) {
    
    
    
    this.returnTo = returnTo;
  }


  public AddressValidatingShipment isReturn(Boolean isReturn) {
    
    
    
    
    this.isReturn = isReturn;
    return this;
  }

   /**
   * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided. 
   * @return isReturn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "An optional indicator if the shipment is intended to be a return. Defaults to false if not provided. ")

  public Boolean getIsReturn() {
    return isReturn;
  }


  public void setIsReturn(Boolean isReturn) {
    
    
    
    this.isReturn = isReturn;
  }


  public AddressValidatingShipment confirmation(DeliveryConfirmation confirmation) {
    
    
    
    
    this.confirmation = confirmation;
    return this;
  }

   /**
   * The type of delivery confirmation that is required for this shipment.
   * @return confirmation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of delivery confirmation that is required for this shipment.")

  public DeliveryConfirmation getConfirmation() {
    return confirmation;
  }


  public void setConfirmation(DeliveryConfirmation confirmation) {
    
    
    
    this.confirmation = confirmation;
  }


  public AddressValidatingShipment customs(InternationalShipmentOptionsNullable customs) {
    
    
    
    
    this.customs = customs;
    return this;
  }

   /**
   * Customs information.  This is usually only needed for international shipments. 
   * @return customs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customs information.  This is usually only needed for international shipments. ")

  public InternationalShipmentOptionsNullable getCustoms() {
    return customs;
  }


  public void setCustoms(InternationalShipmentOptionsNullable customs) {
    
    
    
    this.customs = customs;
  }


  public AddressValidatingShipment advancedOptions(AdvancedShipmentOptions advancedOptions) {
    
    
    
    
    this.advancedOptions = advancedOptions;
    return this;
  }

   /**
   * Advanced shipment options.  These are entirely optional.
   * @return advancedOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Advanced shipment options.  These are entirely optional.")

  public AdvancedShipmentOptions getAdvancedOptions() {
    return advancedOptions;
  }


  public void setAdvancedOptions(AdvancedShipmentOptions advancedOptions) {
    
    
    
    this.advancedOptions = advancedOptions;
  }


  public AddressValidatingShipment insuranceProvider(InsuranceProvider insuranceProvider) {
    
    
    
    
    this.insuranceProvider = insuranceProvider;
    return this;
  }

   /**
   * The insurance provider to use for any insured packages in the shipment. 
   * @return insuranceProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The insurance provider to use for any insured packages in the shipment. ")

  public InsuranceProvider getInsuranceProvider() {
    return insuranceProvider;
  }


  public void setInsuranceProvider(InsuranceProvider insuranceProvider) {
    
    
    
    this.insuranceProvider = insuranceProvider;
  }


  public AddressValidatingShipment orderSourceCode(OrderSourceName orderSourceCode) {
    
    
    
    
    this.orderSourceCode = orderSourceCode;
    return this;
  }

   /**
   * Get orderSourceCode
   * @return orderSourceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrderSourceName getOrderSourceCode() {
    return orderSourceCode;
  }


  public void setOrderSourceCode(OrderSourceName orderSourceCode) {
    
    
    
    this.orderSourceCode = orderSourceCode;
  }


  public AddressValidatingShipment packages(List<ModelPackage> packages) {
    
    
    
    
    this.packages = packages;
    return this;
  }

  public AddressValidatingShipment addPackagesItem(ModelPackage packagesItem) {
    if (this.packages == null) {
      this.packages = new ArrayList<>();
    }
    this.packages.add(packagesItem);
    return this;
  }

   /**
   * The packages in the shipment.  &gt; **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn&#39;t allow it, an error will be returned. 
   * @return packages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The packages in the shipment.  > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned. ")

  public List<ModelPackage> getPackages() {
    return packages;
  }


  public void setPackages(List<ModelPackage> packages) {
    
    
    
    this.packages = packages;
  }


  public AddressValidatingShipment totalWeight(Weight totalWeight) {
    
    
    
    
    this.totalWeight = totalWeight;
    return this;
  }

   /**
   * The combined weight of all packages in the shipment
   * @return totalWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The combined weight of all packages in the shipment")

  public Weight getTotalWeight() {
    return totalWeight;
  }


  public void setTotalWeight(Weight totalWeight) {
    
    
    
    this.totalWeight = totalWeight;
  }


  public AddressValidatingShipment comparisonRateType(String comparisonRateType) {
    
    
    
    
    this.comparisonRateType = comparisonRateType;
    return this;
  }

   /**
   * Calculate a rate for this shipment with the requested carrier using a ratecard that differs from the default.  Only supported for UPS and USPS.
   * @return comparisonRateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "retail", value = "Calculate a rate for this shipment with the requested carrier using a ratecard that differs from the default.  Only supported for UPS and USPS.")

  public String getComparisonRateType() {
    return comparisonRateType;
  }


  public void setComparisonRateType(String comparisonRateType) {
    
    
    
    this.comparisonRateType = comparisonRateType;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddressValidatingShipment instance itself
   */
  public AddressValidatingShipment putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressValidatingShipment addressValidatingShipment = (AddressValidatingShipment) o;
    return Objects.equals(this.validateAddress, addressValidatingShipment.validateAddress) &&
        Objects.equals(this.tags, addressValidatingShipment.tags) &&
        Objects.equals(this.shipmentId, addressValidatingShipment.shipmentId) &&
        Objects.equals(this.carrierId, addressValidatingShipment.carrierId) &&
        Objects.equals(this.serviceCode, addressValidatingShipment.serviceCode) &&
        Objects.equals(this.externalOrderId, addressValidatingShipment.externalOrderId) &&
        Objects.equals(this.items, addressValidatingShipment.items) &&
        Objects.equals(this.taxIdentifiers, addressValidatingShipment.taxIdentifiers) &&
        Objects.equals(this.externalShipmentId, addressValidatingShipment.externalShipmentId) &&
        Objects.equals(this.shipmentNumber, addressValidatingShipment.shipmentNumber) &&
        Objects.equals(this.shipDate, addressValidatingShipment.shipDate) &&
        Objects.equals(this.createdAt, addressValidatingShipment.createdAt) &&
        Objects.equals(this.modifiedAt, addressValidatingShipment.modifiedAt) &&
        Objects.equals(this.shipmentStatus, addressValidatingShipment.shipmentStatus) &&
        Objects.equals(this.shipTo, addressValidatingShipment.shipTo) &&
        Objects.equals(this.shipFrom, addressValidatingShipment.shipFrom) &&
        Objects.equals(this.warehouseId, addressValidatingShipment.warehouseId) &&
        Objects.equals(this.returnTo, addressValidatingShipment.returnTo) &&
        Objects.equals(this.isReturn, addressValidatingShipment.isReturn) &&
        Objects.equals(this.confirmation, addressValidatingShipment.confirmation) &&
        Objects.equals(this.customs, addressValidatingShipment.customs) &&
        Objects.equals(this.advancedOptions, addressValidatingShipment.advancedOptions) &&
        Objects.equals(this.insuranceProvider, addressValidatingShipment.insuranceProvider) &&
        Objects.equals(this.orderSourceCode, addressValidatingShipment.orderSourceCode) &&
        Objects.equals(this.packages, addressValidatingShipment.packages) &&
        Objects.equals(this.totalWeight, addressValidatingShipment.totalWeight) &&
        Objects.equals(this.comparisonRateType, addressValidatingShipment.comparisonRateType)&&
        Objects.equals(this.additionalProperties, addressValidatingShipment.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(validateAddress, tags, shipmentId, carrierId, serviceCode, externalOrderId, items, taxIdentifiers, externalShipmentId, shipmentNumber, shipDate, createdAt, modifiedAt, shipmentStatus, shipTo, shipFrom, warehouseId, returnTo, isReturn, confirmation, customs, advancedOptions, insuranceProvider, orderSourceCode, packages, totalWeight, comparisonRateType, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressValidatingShipment {\n");
    sb.append("    validateAddress: ").append(toIndentedString(validateAddress)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    externalOrderId: ").append(toIndentedString(externalOrderId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    taxIdentifiers: ").append(toIndentedString(taxIdentifiers)).append("\n");
    sb.append("    externalShipmentId: ").append(toIndentedString(externalShipmentId)).append("\n");
    sb.append("    shipmentNumber: ").append(toIndentedString(shipmentNumber)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    shipmentStatus: ").append(toIndentedString(shipmentStatus)).append("\n");
    sb.append("    shipTo: ").append(toIndentedString(shipTo)).append("\n");
    sb.append("    shipFrom: ").append(toIndentedString(shipFrom)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("    returnTo: ").append(toIndentedString(returnTo)).append("\n");
    sb.append("    isReturn: ").append(toIndentedString(isReturn)).append("\n");
    sb.append("    confirmation: ").append(toIndentedString(confirmation)).append("\n");
    sb.append("    customs: ").append(toIndentedString(customs)).append("\n");
    sb.append("    advancedOptions: ").append(toIndentedString(advancedOptions)).append("\n");
    sb.append("    insuranceProvider: ").append(toIndentedString(insuranceProvider)).append("\n");
    sb.append("    orderSourceCode: ").append(toIndentedString(orderSourceCode)).append("\n");
    sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
    sb.append("    totalWeight: ").append(toIndentedString(totalWeight)).append("\n");
    sb.append("    comparisonRateType: ").append(toIndentedString(comparisonRateType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("validate_address");
    openapiFields.add("tags");
    openapiFields.add("shipment_id");
    openapiFields.add("carrier_id");
    openapiFields.add("service_code");
    openapiFields.add("external_order_id");
    openapiFields.add("items");
    openapiFields.add("tax_identifiers");
    openapiFields.add("external_shipment_id");
    openapiFields.add("shipment_number");
    openapiFields.add("ship_date");
    openapiFields.add("created_at");
    openapiFields.add("modified_at");
    openapiFields.add("shipment_status");
    openapiFields.add("ship_to");
    openapiFields.add("ship_from");
    openapiFields.add("warehouse_id");
    openapiFields.add("return_to");
    openapiFields.add("is_return");
    openapiFields.add("confirmation");
    openapiFields.add("customs");
    openapiFields.add("advanced_options");
    openapiFields.add("insurance_provider");
    openapiFields.add("order_source_code");
    openapiFields.add("packages");
    openapiFields.add("total_weight");
    openapiFields.add("comparison_rate_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("shipment_id");
    openapiRequiredFields.add("carrier_id");
    openapiRequiredFields.add("service_code");
    openapiRequiredFields.add("ship_to");
    openapiRequiredFields.add("ship_from");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddressValidatingShipment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddressValidatingShipment.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddressValidatingShipment is not found in the empty JSON string", AddressValidatingShipment.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddressValidatingShipment.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
        if (jsonArraytags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
          }

          // validate the optional field `tags` (array)
          for (int i = 0; i < jsonArraytags.size(); i++) {
            Tag.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("shipment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipment_id").toString()));
      }
      if (!jsonObj.get("carrier_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_id").toString()));
      }
      if (!jsonObj.get("service_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_code").toString()));
      }
      if (!jsonObj.get("external_order_id").isJsonNull() && (jsonObj.get("external_order_id") != null && !jsonObj.get("external_order_id").isJsonNull()) && !jsonObj.get("external_order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_order_id").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            ShipmentItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("tax_identifiers") != null && !jsonObj.get("tax_identifiers").isJsonNull()) {
        JsonArray jsonArraytaxIdentifiers = jsonObj.getAsJsonArray("tax_identifiers");
        if (jsonArraytaxIdentifiers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tax_identifiers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tax_identifiers` to be an array in the JSON string but got `%s`", jsonObj.get("tax_identifiers").toString()));
          }

          // validate the optional field `tax_identifiers` (array)
          for (int i = 0; i < jsonArraytaxIdentifiers.size(); i++) {
            TaxIdentifier.validateJsonObject(jsonArraytaxIdentifiers.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("external_shipment_id").isJsonNull() && (jsonObj.get("external_shipment_id") != null && !jsonObj.get("external_shipment_id").isJsonNull()) && !jsonObj.get("external_shipment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_shipment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_shipment_id").toString()));
      }
      if (!jsonObj.get("shipment_number").isJsonNull() && (jsonObj.get("shipment_number") != null && !jsonObj.get("shipment_number").isJsonNull()) && !jsonObj.get("shipment_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipment_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipment_number").toString()));
      }
      // validate the required field `ship_to`
      ShippingAddressTo.validateJsonObject(jsonObj.getAsJsonObject("ship_to"));
      // validate the required field `ship_from`
      ShippingAddress.validateJsonObject(jsonObj.getAsJsonObject("ship_from"));
      if (!jsonObj.get("warehouse_id").isJsonNull() && (jsonObj.get("warehouse_id") != null && !jsonObj.get("warehouse_id").isJsonNull()) && !jsonObj.get("warehouse_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouse_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouse_id").toString()));
      }
      // validate the optional field `return_to`
      if (jsonObj.get("return_to") != null && !jsonObj.get("return_to").isJsonNull()) {
        ShippingAddress.validateJsonObject(jsonObj.getAsJsonObject("return_to"));
      }
      // validate the optional field `customs`
      if (jsonObj.get("customs") != null && !jsonObj.get("customs").isJsonNull()) {
        InternationalShipmentOptionsNullable.validateJsonObject(jsonObj.getAsJsonObject("customs"));
      }
      // validate the optional field `advanced_options`
      if (jsonObj.get("advanced_options") != null && !jsonObj.get("advanced_options").isJsonNull()) {
        AdvancedShipmentOptions.validateJsonObject(jsonObj.getAsJsonObject("advanced_options"));
      }
      if (jsonObj.get("packages") != null && !jsonObj.get("packages").isJsonNull()) {
        JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
        if (jsonArraypackages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
          }

          // validate the optional field `packages` (array)
          for (int i = 0; i < jsonArraypackages.size(); i++) {
            ModelPackage.validateJsonObject(jsonArraypackages.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `total_weight`
      if (jsonObj.get("total_weight") != null && !jsonObj.get("total_weight").isJsonNull()) {
        Weight.validateJsonObject(jsonObj.getAsJsonObject("total_weight"));
      }
      if (!jsonObj.get("comparison_rate_type").isJsonNull() && (jsonObj.get("comparison_rate_type") != null && !jsonObj.get("comparison_rate_type").isJsonNull()) && !jsonObj.get("comparison_rate_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comparison_rate_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comparison_rate_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddressValidatingShipment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddressValidatingShipment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddressValidatingShipment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddressValidatingShipment.class));

       return (TypeAdapter<T>) new TypeAdapter<AddressValidatingShipment>() {
           @Override
           public void write(JsonWriter out, AddressValidatingShipment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddressValidatingShipment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddressValidatingShipment instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddressValidatingShipment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddressValidatingShipment
  * @throws IOException if the JSON string is invalid with respect to AddressValidatingShipment
  */
  public static AddressValidatingShipment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddressValidatingShipment.class);
  }

 /**
  * Convert an instance of AddressValidatingShipment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

