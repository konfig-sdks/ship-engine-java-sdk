/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Dimensions;
import com.konfigthis.client.model.LabelDownload;
import com.konfigthis.client.model.LabelMessages;
import com.konfigthis.client.model.MonetaryValue;
import com.konfigthis.client.model.OptionalLink;
import com.konfigthis.client.model.Products;
import com.konfigthis.client.model.Weight;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) 
 */
@ApiModel(description = "A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) ")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ModelPackage {
  public static final String SERIALIZED_NAME_PACKAGE_ID = "package_id";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private String packageId;

  public static final String SERIALIZED_NAME_PACKAGE_CODE = "package_code";
  @SerializedName(SERIALIZED_NAME_PACKAGE_CODE)
  private String packageCode;

  public static final String SERIALIZED_NAME_CONTENT_DESCRIPTION = "content_description";
  @SerializedName(SERIALIZED_NAME_CONTENT_DESCRIPTION)
  private String contentDescription;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Weight weight;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private Dimensions dimensions;

  public static final String SERIALIZED_NAME_INSURED_VALUE = "insured_value";
  @SerializedName(SERIALIZED_NAME_INSURED_VALUE)
  private MonetaryValue insuredValue;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "tracking_number";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_LABEL_MESSAGES = "label_messages";
  @SerializedName(SERIALIZED_NAME_LABEL_MESSAGES)
  private LabelMessages labelMessages;

  public static final String SERIALIZED_NAME_EXTERNAL_PACKAGE_ID = "external_package_id";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PACKAGE_ID)
  private String externalPackageId;

  public static final String SERIALIZED_NAME_LABEL_DOWNLOAD = "label_download";
  @SerializedName(SERIALIZED_NAME_LABEL_DOWNLOAD)
  private LabelDownload labelDownload;

  public static final String SERIALIZED_NAME_FORM_DOWNLOAD = "form_download";
  @SerializedName(SERIALIZED_NAME_FORM_DOWNLOAD)
  private OptionalLink formDownload;

  public static final String SERIALIZED_NAME_SEQUENCE = "sequence";
  @SerializedName(SERIALIZED_NAME_SEQUENCE)
  private Integer sequence;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<Products> products = null;

  public ModelPackage() {
  }

  
  public ModelPackage(
     Integer sequence
  ) {
    this();
    this.sequence = sequence;
  }

  public ModelPackage packageId(String packageId) {
    
    
    if (packageId != null && packageId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageId. Length must be greater than or equal to 1.");
    }
    
    this.packageId = packageId;
    return this;
  }

   /**
   * A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "se-28529731", value = "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.")

  public String getPackageId() {
    return packageId;
  }


  public void setPackageId(String packageId) {
    
    
    if (packageId != null && packageId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageId. Length must be greater than or equal to 1.");
    }
    this.packageId = packageId;
  }


  public ModelPackage packageCode(String packageCode) {
    
    
    if (packageCode != null && packageCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageCode. Length must be greater than or equal to 1.");
    }
    
    this.packageCode = packageCode;
    return this;
  }

   /**
   * A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as &#x60;thick_envelope&#x60;, &#x60;small_flat_rate_box&#x60;, &#x60;large_package&#x60;, etc.  Use the code &#x60;package&#x60; for custom or unknown package types. 
   * @return packageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "small_flat_rate_box", value = "A [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  Use the code `package` for custom or unknown package types. ")

  public String getPackageCode() {
    return packageCode;
  }


  public void setPackageCode(String packageCode) {
    
    
    if (packageCode != null && packageCode.length() < 1) {
      throw new IllegalArgumentException("Invalid value for packageCode. Length must be greater than or equal to 1.");
    }
    this.packageCode = packageCode;
  }


  public ModelPackage contentDescription(String contentDescription) {
    
    
    if (contentDescription != null && contentDescription.length() < 1) {
      throw new IllegalArgumentException("Invalid value for contentDescription. Length must be greater than or equal to 1.");
    }
    
    this.contentDescription = contentDescription;
    return this;
  }

   /**
   * A short description of the package content. Required for shipments moving to, from, and through Mexico. 
   * @return contentDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hand knitted wool socks", value = "A short description of the package content. Required for shipments moving to, from, and through Mexico. ")

  public String getContentDescription() {
    return contentDescription;
  }


  public void setContentDescription(String contentDescription) {
    
    
    if (contentDescription != null && contentDescription.length() < 1) {
      throw new IllegalArgumentException("Invalid value for contentDescription. Length must be greater than or equal to 1.");
    }
    this.contentDescription = contentDescription;
  }


  public ModelPackage weight(Weight weight) {
    
    
    
    
    this.weight = weight;
    return this;
  }

   /**
   * The package weight
   * @return weight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The package weight")

  public Weight getWeight() {
    return weight;
  }


  public void setWeight(Weight weight) {
    
    
    
    this.weight = weight;
  }


  public ModelPackage dimensions(Dimensions dimensions) {
    
    
    
    
    this.dimensions = dimensions;
    return this;
  }

   /**
   * The package dimensions
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The package dimensions")

  public Dimensions getDimensions() {
    return dimensions;
  }


  public void setDimensions(Dimensions dimensions) {
    
    
    
    this.dimensions = dimensions;
  }


  public ModelPackage insuredValue(MonetaryValue insuredValue) {
    
    
    
    
    this.insuredValue = insuredValue;
    return this;
  }

   /**
   * The insured value of the package.  Requires the &#x60;insurance_provider&#x60; field of the shipment to be set. 
   * @return insuredValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set. ")

  public MonetaryValue getInsuredValue() {
    return insuredValue;
  }


  public void setInsuredValue(MonetaryValue insuredValue) {
    
    
    
    this.insuredValue = insuredValue;
  }


  public ModelPackage trackingNumber(String trackingNumber) {
    
    
    if (trackingNumber != null && trackingNumber.length() < 1) {
      throw new IllegalArgumentException("Invalid value for trackingNumber. Length must be greater than or equal to 1.");
    }
    
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * A tracking number for a package. The format depends on the carrier.
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1Z932R800392060079", value = "A tracking number for a package. The format depends on the carrier.")

  public String getTrackingNumber() {
    return trackingNumber;
  }


  public void setTrackingNumber(String trackingNumber) {
    
    
    if (trackingNumber != null && trackingNumber.length() < 1) {
      throw new IllegalArgumentException("Invalid value for trackingNumber. Length must be greater than or equal to 1.");
    }
    this.trackingNumber = trackingNumber;
  }


  public ModelPackage labelMessages(LabelMessages labelMessages) {
    
    
    
    
    this.labelMessages = labelMessages;
    return this;
  }

   /**
   * Get labelMessages
   * @return labelMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LabelMessages getLabelMessages() {
    return labelMessages;
  }


  public void setLabelMessages(LabelMessages labelMessages) {
    
    
    
    this.labelMessages = labelMessages;
  }


  public ModelPackage externalPackageId(String externalPackageId) {
    
    
    if (externalPackageId != null && externalPackageId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for externalPackageId. Length must be greater than or equal to 1.");
    }
    
    this.externalPackageId = externalPackageId;
    return this;
  }

   /**
   * An external package id.
   * @return externalPackageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An external package id.")

  public String getExternalPackageId() {
    return externalPackageId;
  }


  public void setExternalPackageId(String externalPackageId) {
    
    
    if (externalPackageId != null && externalPackageId.length() < 1) {
      throw new IllegalArgumentException("Invalid value for externalPackageId. Length must be greater than or equal to 1.");
    }
    this.externalPackageId = externalPackageId;
  }


  public ModelPackage labelDownload(LabelDownload labelDownload) {
    
    
    
    
    this.labelDownload = labelDownload;
    return this;
  }

   /**
   * The label download for the package
   * @return labelDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The label download for the package")

  public LabelDownload getLabelDownload() {
    return labelDownload;
  }


  public void setLabelDownload(LabelDownload labelDownload) {
    
    
    
    this.labelDownload = labelDownload;
  }


  public ModelPackage formDownload(OptionalLink formDownload) {
    
    
    
    
    this.formDownload = formDownload;
    return this;
  }

   /**
   * The form download for any customs that are needed
   * @return formDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The form download for any customs that are needed")

  public OptionalLink getFormDownload() {
    return formDownload;
  }


  public void setFormDownload(OptionalLink formDownload) {
    
    
    
    this.formDownload = formDownload;
  }


   /**
   * Package sequence
   * @return sequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Package sequence")

  public Integer getSequence() {
    return sequence;
  }




  public ModelPackage products(List<Products> products) {
    
    
    
    
    this.products = products;
    return this;
  }

  public ModelPackage addProductsItem(Products productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Details about products inside packages (Information provided would be used on custom documentation)
   * @return products
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "Details about products inside packages (Information provided would be used on custom documentation)")

  public List<Products> getProducts() {
    return products;
  }


  public void setProducts(List<Products> products) {
    
    
    
    this.products = products;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ModelPackage instance itself
   */
  public ModelPackage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPackage _package = (ModelPackage) o;
    return Objects.equals(this.packageId, _package.packageId) &&
        Objects.equals(this.packageCode, _package.packageCode) &&
        Objects.equals(this.contentDescription, _package.contentDescription) &&
        Objects.equals(this.weight, _package.weight) &&
        Objects.equals(this.dimensions, _package.dimensions) &&
        Objects.equals(this.insuredValue, _package.insuredValue) &&
        Objects.equals(this.trackingNumber, _package.trackingNumber) &&
        Objects.equals(this.labelMessages, _package.labelMessages) &&
        Objects.equals(this.externalPackageId, _package.externalPackageId) &&
        Objects.equals(this.labelDownload, _package.labelDownload) &&
        Objects.equals(this.formDownload, _package.formDownload) &&
        Objects.equals(this.sequence, _package.sequence) &&
        Objects.equals(this.products, _package.products)&&
        Objects.equals(this.additionalProperties, _package.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(packageId, packageCode, contentDescription, weight, dimensions, insuredValue, trackingNumber, labelMessages, externalPackageId, labelDownload, formDownload, sequence, products, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPackage {\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    packageCode: ").append(toIndentedString(packageCode)).append("\n");
    sb.append("    contentDescription: ").append(toIndentedString(contentDescription)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    insuredValue: ").append(toIndentedString(insuredValue)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    labelMessages: ").append(toIndentedString(labelMessages)).append("\n");
    sb.append("    externalPackageId: ").append(toIndentedString(externalPackageId)).append("\n");
    sb.append("    labelDownload: ").append(toIndentedString(labelDownload)).append("\n");
    sb.append("    formDownload: ").append(toIndentedString(formDownload)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("package_id");
    openapiFields.add("package_code");
    openapiFields.add("content_description");
    openapiFields.add("weight");
    openapiFields.add("dimensions");
    openapiFields.add("insured_value");
    openapiFields.add("tracking_number");
    openapiFields.add("label_messages");
    openapiFields.add("external_package_id");
    openapiFields.add("label_download");
    openapiFields.add("form_download");
    openapiFields.add("sequence");
    openapiFields.add("products");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("weight");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelPackage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelPackage is not found in the empty JSON string", ModelPackage.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModelPackage.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("package_id") != null && !jsonObj.get("package_id").isJsonNull()) && !jsonObj.get("package_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `package_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("package_id").toString()));
      }
      if ((jsonObj.get("package_code") != null && !jsonObj.get("package_code").isJsonNull()) && !jsonObj.get("package_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `package_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("package_code").toString()));
      }
      if (!jsonObj.get("content_description").isJsonNull() && (jsonObj.get("content_description") != null && !jsonObj.get("content_description").isJsonNull()) && !jsonObj.get("content_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_description").toString()));
      }
      // validate the required field `weight`
      Weight.validateJsonObject(jsonObj.getAsJsonObject("weight"));
      // validate the optional field `dimensions`
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        Dimensions.validateJsonObject(jsonObj.getAsJsonObject("dimensions"));
      }
      // validate the optional field `insured_value`
      if (jsonObj.get("insured_value") != null && !jsonObj.get("insured_value").isJsonNull()) {
        MonetaryValue.validateJsonObject(jsonObj.getAsJsonObject("insured_value"));
      }
      if ((jsonObj.get("tracking_number") != null && !jsonObj.get("tracking_number").isJsonNull()) && !jsonObj.get("tracking_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tracking_number").toString()));
      }
      // validate the optional field `label_messages`
      if (jsonObj.get("label_messages") != null && !jsonObj.get("label_messages").isJsonNull()) {
        LabelMessages.validateJsonObject(jsonObj.getAsJsonObject("label_messages"));
      }
      if ((jsonObj.get("external_package_id") != null && !jsonObj.get("external_package_id").isJsonNull()) && !jsonObj.get("external_package_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_package_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_package_id").toString()));
      }
      // validate the optional field `label_download`
      if (jsonObj.get("label_download") != null && !jsonObj.get("label_download").isJsonNull()) {
        LabelDownload.validateJsonObject(jsonObj.getAsJsonObject("label_download"));
      }
      // validate the optional field `form_download`
      if (jsonObj.get("form_download") != null && !jsonObj.get("form_download").isJsonNull()) {
        OptionalLink.validateJsonObject(jsonObj.getAsJsonObject("form_download"));
      }
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        JsonArray jsonArrayproducts = jsonObj.getAsJsonArray("products");
        if (jsonArrayproducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("products").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `products` to be an array in the JSON string but got `%s`", jsonObj.get("products").toString()));
          }

          // validate the optional field `products` (array)
          for (int i = 0; i < jsonArrayproducts.size(); i++) {
            Products.validateJsonObject(jsonArrayproducts.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelPackage>() {
           @Override
           public void write(JsonWriter out, ModelPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelPackage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ModelPackage instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelPackage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelPackage
  * @throws IOException if the JSON string is invalid with respect to ModelPackage
  */
  public static ModelPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelPackage.class);
  }

 /**
  * Convert an instance of ModelPackage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

