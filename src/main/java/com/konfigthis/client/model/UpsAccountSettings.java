/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AncillaryServiceEndorsement;
import com.konfigthis.client.model.UpsInvoice;
import com.konfigthis.client.model.UpsPickupType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UPS account settings
 */
@ApiModel(description = "UPS account settings")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UpsAccountSettings {
  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_IS_PRIMARY_ACCOUNT = "is_primary_account";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY_ACCOUNT)
  private Boolean isPrimaryAccount;

  public static final String SERIALIZED_NAME_PICKUP_TYPE = "pickup_type";
  @SerializedName(SERIALIZED_NAME_PICKUP_TYPE)
  private UpsPickupType pickupType;

  public static final String SERIALIZED_NAME_USE_CARBON_NEUTRAL_SHIPPING_PROGRAM = "use_carbon_neutral_shipping_program";
  @SerializedName(SERIALIZED_NAME_USE_CARBON_NEUTRAL_SHIPPING_PROGRAM)
  private Boolean useCarbonNeutralShippingProgram;

  public static final String SERIALIZED_NAME_USE_GROUND_FREIGHT_PRICING = "use_ground_freight_pricing";
  @SerializedName(SERIALIZED_NAME_USE_GROUND_FREIGHT_PRICING)
  private Boolean useGroundFreightPricing;

  public static final String SERIALIZED_NAME_USE_CONSOLIDATION_SERVICES = "use_consolidation_services";
  @SerializedName(SERIALIZED_NAME_USE_CONSOLIDATION_SERVICES)
  private Boolean useConsolidationServices;

  public static final String SERIALIZED_NAME_USE_ORDER_NUMBER_ON_MAIL_INNOVATIONS_LABELS = "use_order_number_on_mail_innovations_labels";
  @SerializedName(SERIALIZED_NAME_USE_ORDER_NUMBER_ON_MAIL_INNOVATIONS_LABELS)
  private Boolean useOrderNumberOnMailInnovationsLabels;

  public static final String SERIALIZED_NAME_MAIL_INNOVATIONS_ENDORSEMENT = "mail_innovations_endorsement";
  @SerializedName(SERIALIZED_NAME_MAIL_INNOVATIONS_ENDORSEMENT)
  private AncillaryServiceEndorsement mailInnovationsEndorsement;

  public static final String SERIALIZED_NAME_MAIL_INNOVATIONS_COST_CENTER = "mail_innovations_cost_center";
  @SerializedName(SERIALIZED_NAME_MAIL_INNOVATIONS_COST_CENTER)
  private String mailInnovationsCostCenter;

  public static final String SERIALIZED_NAME_USE_NEGOTIATED_RATES = "use_negotiated_rates";
  @SerializedName(SERIALIZED_NAME_USE_NEGOTIATED_RATES)
  private Boolean useNegotiatedRates;

  public static final String SERIALIZED_NAME_ACCOUNT_POSTAL_CODE = "account_postal_code";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_POSTAL_CODE)
  private String accountPostalCode;

  public static final String SERIALIZED_NAME_INVOICE = "invoice";
  @SerializedName(SERIALIZED_NAME_INVOICE)
  private UpsInvoice invoice;

  public UpsAccountSettings() {
  }

  public UpsAccountSettings nickname(String nickname) {
    
    
    if (nickname != null && nickname.length() < 1) {
      throw new IllegalArgumentException("Invalid value for nickname. Length must be greater than or equal to 1.");
    }
    
    this.nickname = nickname;
    return this;
  }

   /**
   * nickname
   * @return nickname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "nickname")

  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    
    
    if (nickname != null && nickname.length() < 1) {
      throw new IllegalArgumentException("Invalid value for nickname. Length must be greater than or equal to 1.");
    }
    this.nickname = nickname;
  }


  public UpsAccountSettings isPrimaryAccount(Boolean isPrimaryAccount) {
    
    
    
    
    this.isPrimaryAccount = isPrimaryAccount;
    return this;
  }

   /**
   * Indicates if this is the primary UPS account
   * @return isPrimaryAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this is the primary UPS account")

  public Boolean getIsPrimaryAccount() {
    return isPrimaryAccount;
  }


  public void setIsPrimaryAccount(Boolean isPrimaryAccount) {
    
    
    
    this.isPrimaryAccount = isPrimaryAccount;
  }


  public UpsAccountSettings pickupType(UpsPickupType pickupType) {
    
    
    
    
    this.pickupType = pickupType;
    return this;
  }

   /**
   * Get pickupType
   * @return pickupType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UpsPickupType getPickupType() {
    return pickupType;
  }


  public void setPickupType(UpsPickupType pickupType) {
    
    
    
    this.pickupType = pickupType;
  }


  public UpsAccountSettings useCarbonNeutralShippingProgram(Boolean useCarbonNeutralShippingProgram) {
    
    
    
    
    this.useCarbonNeutralShippingProgram = useCarbonNeutralShippingProgram;
    return this;
  }

   /**
   * The use carbon neutral shipping program
   * @return useCarbonNeutralShippingProgram
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use carbon neutral shipping program")

  public Boolean getUseCarbonNeutralShippingProgram() {
    return useCarbonNeutralShippingProgram;
  }


  public void setUseCarbonNeutralShippingProgram(Boolean useCarbonNeutralShippingProgram) {
    
    
    
    this.useCarbonNeutralShippingProgram = useCarbonNeutralShippingProgram;
  }


  public UpsAccountSettings useGroundFreightPricing(Boolean useGroundFreightPricing) {
    
    
    
    
    this.useGroundFreightPricing = useGroundFreightPricing;
    return this;
  }

   /**
   * The use ground freight pricing
   * @return useGroundFreightPricing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use ground freight pricing")

  public Boolean getUseGroundFreightPricing() {
    return useGroundFreightPricing;
  }


  public void setUseGroundFreightPricing(Boolean useGroundFreightPricing) {
    
    
    
    this.useGroundFreightPricing = useGroundFreightPricing;
  }


  public UpsAccountSettings useConsolidationServices(Boolean useConsolidationServices) {
    
    
    
    
    this.useConsolidationServices = useConsolidationServices;
    return this;
  }

   /**
   * The use consolidation services
   * @return useConsolidationServices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use consolidation services")

  public Boolean getUseConsolidationServices() {
    return useConsolidationServices;
  }


  public void setUseConsolidationServices(Boolean useConsolidationServices) {
    
    
    
    this.useConsolidationServices = useConsolidationServices;
  }


  public UpsAccountSettings useOrderNumberOnMailInnovationsLabels(Boolean useOrderNumberOnMailInnovationsLabels) {
    
    
    
    
    this.useOrderNumberOnMailInnovationsLabels = useOrderNumberOnMailInnovationsLabels;
    return this;
  }

   /**
   * The use order number on mail innovations labels
   * @return useOrderNumberOnMailInnovationsLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use order number on mail innovations labels")

  public Boolean getUseOrderNumberOnMailInnovationsLabels() {
    return useOrderNumberOnMailInnovationsLabels;
  }


  public void setUseOrderNumberOnMailInnovationsLabels(Boolean useOrderNumberOnMailInnovationsLabels) {
    
    
    
    this.useOrderNumberOnMailInnovationsLabels = useOrderNumberOnMailInnovationsLabels;
  }


  public UpsAccountSettings mailInnovationsEndorsement(AncillaryServiceEndorsement mailInnovationsEndorsement) {
    
    
    
    
    this.mailInnovationsEndorsement = mailInnovationsEndorsement;
    return this;
  }

   /**
   * Get mailInnovationsEndorsement
   * @return mailInnovationsEndorsement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AncillaryServiceEndorsement getMailInnovationsEndorsement() {
    return mailInnovationsEndorsement;
  }


  public void setMailInnovationsEndorsement(AncillaryServiceEndorsement mailInnovationsEndorsement) {
    
    
    
    this.mailInnovationsEndorsement = mailInnovationsEndorsement;
  }


  public UpsAccountSettings mailInnovationsCostCenter(String mailInnovationsCostCenter) {
    
    
    if (mailInnovationsCostCenter != null && mailInnovationsCostCenter.length() < 0) {
      throw new IllegalArgumentException("Invalid value for mailInnovationsCostCenter. Length must be greater than or equal to 0.");
    }
    
    this.mailInnovationsCostCenter = mailInnovationsCostCenter;
    return this;
  }

   /**
   * mail innovations cost center
   * @return mailInnovationsCostCenter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "mail innovations cost center")

  public String getMailInnovationsCostCenter() {
    return mailInnovationsCostCenter;
  }


  public void setMailInnovationsCostCenter(String mailInnovationsCostCenter) {
    
    
    if (mailInnovationsCostCenter != null && mailInnovationsCostCenter.length() < 0) {
      throw new IllegalArgumentException("Invalid value for mailInnovationsCostCenter. Length must be greater than or equal to 0.");
    }
    this.mailInnovationsCostCenter = mailInnovationsCostCenter;
  }


  public UpsAccountSettings useNegotiatedRates(Boolean useNegotiatedRates) {
    
    
    
    
    this.useNegotiatedRates = useNegotiatedRates;
    return this;
  }

   /**
   * The use negotiated rates
   * @return useNegotiatedRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use negotiated rates")

  public Boolean getUseNegotiatedRates() {
    return useNegotiatedRates;
  }


  public void setUseNegotiatedRates(Boolean useNegotiatedRates) {
    
    
    
    this.useNegotiatedRates = useNegotiatedRates;
  }


  public UpsAccountSettings accountPostalCode(String accountPostalCode) {
    
    
    if (accountPostalCode != null && accountPostalCode.length() < 5) {
      throw new IllegalArgumentException("Invalid value for accountPostalCode. Length must be greater than or equal to 5.");
    }
    
    this.accountPostalCode = accountPostalCode;
    return this;
  }

   /**
   * account postal code
   * @return accountPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "account postal code")

  public String getAccountPostalCode() {
    return accountPostalCode;
  }


  public void setAccountPostalCode(String accountPostalCode) {
    
    
    if (accountPostalCode != null && accountPostalCode.length() < 5) {
      throw new IllegalArgumentException("Invalid value for accountPostalCode. Length must be greater than or equal to 5.");
    }
    this.accountPostalCode = accountPostalCode;
  }


  public UpsAccountSettings invoice(UpsInvoice invoice) {
    
    
    
    
    this.invoice = invoice;
    return this;
  }

   /**
   * The invoice
   * @return invoice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice")

  public UpsInvoice getInvoice() {
    return invoice;
  }


  public void setInvoice(UpsInvoice invoice) {
    
    
    
    this.invoice = invoice;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UpsAccountSettings instance itself
   */
  public UpsAccountSettings putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpsAccountSettings upsAccountSettings = (UpsAccountSettings) o;
    return Objects.equals(this.nickname, upsAccountSettings.nickname) &&
        Objects.equals(this.isPrimaryAccount, upsAccountSettings.isPrimaryAccount) &&
        Objects.equals(this.pickupType, upsAccountSettings.pickupType) &&
        Objects.equals(this.useCarbonNeutralShippingProgram, upsAccountSettings.useCarbonNeutralShippingProgram) &&
        Objects.equals(this.useGroundFreightPricing, upsAccountSettings.useGroundFreightPricing) &&
        Objects.equals(this.useConsolidationServices, upsAccountSettings.useConsolidationServices) &&
        Objects.equals(this.useOrderNumberOnMailInnovationsLabels, upsAccountSettings.useOrderNumberOnMailInnovationsLabels) &&
        Objects.equals(this.mailInnovationsEndorsement, upsAccountSettings.mailInnovationsEndorsement) &&
        Objects.equals(this.mailInnovationsCostCenter, upsAccountSettings.mailInnovationsCostCenter) &&
        Objects.equals(this.useNegotiatedRates, upsAccountSettings.useNegotiatedRates) &&
        Objects.equals(this.accountPostalCode, upsAccountSettings.accountPostalCode) &&
        Objects.equals(this.invoice, upsAccountSettings.invoice)&&
        Objects.equals(this.additionalProperties, upsAccountSettings.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nickname, isPrimaryAccount, pickupType, useCarbonNeutralShippingProgram, useGroundFreightPricing, useConsolidationServices, useOrderNumberOnMailInnovationsLabels, mailInnovationsEndorsement, mailInnovationsCostCenter, useNegotiatedRates, accountPostalCode, invoice, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpsAccountSettings {\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    isPrimaryAccount: ").append(toIndentedString(isPrimaryAccount)).append("\n");
    sb.append("    pickupType: ").append(toIndentedString(pickupType)).append("\n");
    sb.append("    useCarbonNeutralShippingProgram: ").append(toIndentedString(useCarbonNeutralShippingProgram)).append("\n");
    sb.append("    useGroundFreightPricing: ").append(toIndentedString(useGroundFreightPricing)).append("\n");
    sb.append("    useConsolidationServices: ").append(toIndentedString(useConsolidationServices)).append("\n");
    sb.append("    useOrderNumberOnMailInnovationsLabels: ").append(toIndentedString(useOrderNumberOnMailInnovationsLabels)).append("\n");
    sb.append("    mailInnovationsEndorsement: ").append(toIndentedString(mailInnovationsEndorsement)).append("\n");
    sb.append("    mailInnovationsCostCenter: ").append(toIndentedString(mailInnovationsCostCenter)).append("\n");
    sb.append("    useNegotiatedRates: ").append(toIndentedString(useNegotiatedRates)).append("\n");
    sb.append("    accountPostalCode: ").append(toIndentedString(accountPostalCode)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nickname");
    openapiFields.add("is_primary_account");
    openapiFields.add("pickup_type");
    openapiFields.add("use_carbon_neutral_shipping_program");
    openapiFields.add("use_ground_freight_pricing");
    openapiFields.add("use_consolidation_services");
    openapiFields.add("use_order_number_on_mail_innovations_labels");
    openapiFields.add("mail_innovations_endorsement");
    openapiFields.add("mail_innovations_cost_center");
    openapiFields.add("use_negotiated_rates");
    openapiFields.add("account_postal_code");
    openapiFields.add("invoice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UpsAccountSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UpsAccountSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpsAccountSettings is not found in the empty JSON string", UpsAccountSettings.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("mail_innovations_cost_center") != null && !jsonObj.get("mail_innovations_cost_center").isJsonNull()) && !jsonObj.get("mail_innovations_cost_center").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mail_innovations_cost_center` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mail_innovations_cost_center").toString()));
      }
      if ((jsonObj.get("account_postal_code") != null && !jsonObj.get("account_postal_code").isJsonNull()) && !jsonObj.get("account_postal_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_postal_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_postal_code").toString()));
      }
      // validate the optional field `invoice`
      if (jsonObj.get("invoice") != null && !jsonObj.get("invoice").isJsonNull()) {
        UpsInvoice.validateJsonObject(jsonObj.getAsJsonObject("invoice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpsAccountSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpsAccountSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpsAccountSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpsAccountSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<UpsAccountSettings>() {
           @Override
           public void write(JsonWriter out, UpsAccountSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UpsAccountSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UpsAccountSettings instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpsAccountSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpsAccountSettings
  * @throws IOException if the JSON string is invalid with respect to UpsAccountSettings
  */
  public static UpsAccountSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpsAccountSettings.class);
  }

 /**
  * Convert an instance of UpsAccountSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

