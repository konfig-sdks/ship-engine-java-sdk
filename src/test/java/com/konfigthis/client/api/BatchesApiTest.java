/*
 * ShipEngine API
 * ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 
 *
 * The version of the OpenAPI document: 1.1.202403202303
 * Contact: sales@shipengine.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Batch;
import com.konfigthis.client.model.BatchStatus;
import com.konfigthis.client.model.BatchesSortBy;
import com.konfigthis.client.model.DisplayScheme;
import com.konfigthis.client.model.LabelFormat;
import com.konfigthis.client.model.LabelLayout;
import com.konfigthis.client.model.ListBatchErrorsResponseBody;
import com.konfigthis.client.model.ListBatchesResponseBody;
import com.konfigthis.client.model.ModifyBatch;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.ProcessBatchRequestBody;
import com.konfigthis.client.model.SortDir;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BatchesApi
 */
@Disabled
public class BatchesApiTest {

    private static BatchesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BatchesApi(apiClient);
    }

    /**
     * Add to a Batch
     *
     * Add a Shipment or Rate to a Batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addToBatchTest() throws ApiException {
        String batchId = null;
        List<String> shipmentIds = null;
        List<String> rateIds = null;
        String response = api.addToBatch(batchId)
                .shipmentIds(shipmentIds)
                .rateIds(rateIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Create A Batch
     *
     * Create a Batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchTest() throws ApiException {
        Batch response = api.batch()
                .execute();
        // TODO: test validations
    }

    /**
     * Update Batch By Id
     *
     * Update Batch By Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batch_0Test() throws ApiException {
        String batchId = null;
        String response = api.batch_0(batchId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete Batch By Id
     *
     * Delete Batch By Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batch_1Test() throws ApiException {
        String batchId = null;
        String response = api.batch_1(batchId)
                .execute();
        // TODO: test validations
    }

    /**
     * Process Batch ID Labels
     *
     * Process Batch ID Labels
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batch_2Test() throws ApiException {
        String batchId = null;
        OffsetDateTime shipDate = null;
        LabelLayout labelLayout = null;
        LabelFormat labelFormat = null;
        DisplayScheme displayScheme = null;
        String response = api.batch_2(batchId)
                .shipDate(shipDate)
                .labelLayout(labelLayout)
                .labelFormat(labelFormat)
                .displayScheme(displayScheme)
                .execute();
        // TODO: test validations
    }

    /**
     * List Batches
     *
     * List Batches associated with your Shipengine account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchesTest() throws ApiException {
        BatchStatus status = null;
        Integer page = null;
        Integer pageSize = null;
        SortDir sortDir = null;
        String batchNumber = null;
        BatchesSortBy sortBy = null;
        ListBatchesResponseBody response = api.batches()
                .status(status)
                .page(page)
                .pageSize(pageSize)
                .sortDir(sortDir)
                .batchNumber(batchNumber)
                .sortBy(sortBy)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Batch By External ID
     *
     * Get Batch By External ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByExternalIdTest() throws ApiException {
        String externalBatchId = null;
        Batch response = api.getByExternalId(externalBatchId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Batch By ID
     *
     * Get Batch By ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String batchId = null;
        Batch response = api.getById(batchId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Batch Errors
     *
     * Error handling in batches are handled differently than in a single synchronous request. You must retrieve the status of your batch by [getting a batch](https://www.shipengine.com/docs/reference/get-batch-by-id/) and getting an overview of the statuses or you can list errors directly here below to get detailed information about the errors. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getErrorsTest() throws ApiException {
        String batchId = null;
        Integer page = null;
        Integer pagesize = null;
        ListBatchErrorsResponseBody response = api.getErrors(batchId)
                .page(page)
                .pagesize(pagesize)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove From Batch
     *
     * Remove a shipment or rate from a batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFromBatchTest() throws ApiException {
        String batchId = null;
        List<String> shipmentIds = null;
        List<String> rateIds = null;
        String response = api.removeFromBatch(batchId)
                .shipmentIds(shipmentIds)
                .rateIds(rateIds)
                .execute();
        // TODO: test validations
    }

}
